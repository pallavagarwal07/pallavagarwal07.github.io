<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-07-10T00:53:34-04:00</updated><id>http://localhost:4000/</id><title type="html">VARSTACK</title><subtitle></subtitle><entry><title type="html">An internâ€™s views - A monthâ€™s end at Google</title><link href="http://localhost:4000/2017/06/07/A-month-end-at-Google/" rel="alternate" type="text/html" title="An intern's views - A month's end at Google" /><published>2017-06-07T00:00:00-04:00</published><updated>2017-06-07T00:00:00-04:00</updated><id>http://localhost:4000/2017/06/07/A-month-end-at-Google</id><content type="html" xml:base="http://localhost:4000/2017/06/07/A-month-end-at-Google/">&lt;p&gt;The series:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/07/How-I-got-here/&quot;&gt;An intern's views - How I got here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/06/07/A-month-end-at-Google/&quot;&gt;An intern's views - A month's end at Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;An intern's views - How far have I come?&lt;/li&gt;
&lt;li&gt;An intern's views - End of diary&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Okay, okay.. I know this article is a bit late (and I've backdated it a bit),
but I've been really busy. As it turns out, work at Google isn't all that easy
(...did I think it would be?). But I'll get to that later ðŸ˜‰.&lt;/p&gt;

&lt;p&gt;So let's walk through my first few days in the office. So, on my first day in
office, I actually got late. Imagine that...&lt;/p&gt;

&lt;p&gt;Anyway, the first week is orientation. I had to go to one of three buildings
in which Google resides. It wasn't too hard to find, and when I got there, I
realised that reaching late wasn't that bad anyway, since I had to wait in line
to be badged as an intern. Also, I wasn't the only one who had had trouble
finding their way around the city.&lt;/p&gt;

&lt;p&gt;All interns join on a Monday, which means that there is an orientation every
week, and my batch was one of the earliest. There weren't a ton of interns
joining that week. However, in U.S. interns have orientation in one of the two
biggest offices: Mountain View for all west coast offices, and New York for all
east cost offices. So we had interns from many other offices as well (Waterloo,
for instance).&lt;/p&gt;

&lt;p&gt;We had our I-9 documents checked, and proceeded to the orientation room. It was
a presentation, where they showed us some of the things that we needed to know.
Basic stuff. We got a t-shirt, a bag, our work laptops (to be returned), and
those infamous funky caps with a propeller on them. Basically, after my first day,
I looked something like this:&lt;/p&gt;

&lt;div style=&quot;display: inline-block; width:29%; vertical-align: top&quot;&gt;
&lt;img src=&quot;/img/intern-cap.jpg&quot; style=&quot;max-width:100%&quot; /&gt;
&lt;/div&gt;


&lt;div style=&quot;display: inline-block; width:69%;&quot;&gt;
If you're wondering whether we are supposed to ever wear those caps, then yes,
we were supposed to wear them during our first TGIF (which ironically are on
Thursdays). &lt;br /&gt;&lt;br /&gt;
After getting to know some of the rules about Google, and making some new
friends, we continued on with the rest of the orientation. That is, for the
whole first week, we spent our time sitting in lectures about some technologies
used by Google, work practices, ethics etc. &lt;br/&gt;&lt;br/&gt;
The work actually doesn't start in first week, since most interns are actually
not in their own office, so the first week is usually all about going home
early, exploring the office, meeting other Googlers, and exploring more of
Google on its intranet.
&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I think the thing I love most about Google is how open the culture is. Google
has all their code in a single (huge) repository, and even interns had access
to all the source code. This includes most of Google's projects, and their
systems. This is also very opposed to a company like Apple, where people in one
department aren't even allowed to talk to people from other departments about
their work. I know some people prefer the secrecy/privacy model, so I'm not
praising one over the other, it is just my own preference.&lt;/p&gt;

&lt;p&gt;I guess some of you may have seen the movie &lt;a href=&quot;//www.imdb.com/title/tt2234155/&quot;&gt;The Internship
(2013)&lt;/a&gt;, and would be wondering: &lt;strong&gt;what about
all the things they showed in the movie? Free food? Quidditch matches?  Coding
on transparent boards? Competing against other interns? Restrictions on
dating?? Is that all true?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hmmm... this is going to take a while.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Free Food&lt;/strong&gt; - Yes, this one is completely true. Google has two kinds of food
outlets; micro kitchens (MKs) and cafes. Micro Kitchens have fillers: fruits,
eggs, milk, soft drinks, energy drinks, coffee machines, and even the big
barista machine to make your own coffee if you don't trust the automatic
machine to do it right. MKs are open 24/7 and usually fully stocked. There's
around 2 or 3 MKs on every floor in Google. The rule of thumb is, no matter
where your desk is, the food wouldn't be more than 30 second walk away.  BUT!!!
Cafes is where Google shines even more. Cafes are for proper meals: breakfast,
lunch AND dinner. Cafes open on weekdays (not weekends), but the food is
amazing (.. did I mention free?). There are a lot of cafes, and each has their
own speciality (some excel at desserts, some at breakfasts); and they have
different opening/closing times, so usually you can find at least some cafe open
during the work hours. Just Google &quot;google food&quot; to get a look at the variety
(images aren't even exaggerated).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quidditch matches&lt;/strong&gt; - Unfortunately I haven't seen one happen. Google does
keep buying tickets to stuff though. I got to go to a Yankees game last
weekend, with best seats, and... you guessed it, all you can eat hotdogs and
drinks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding on transparent boards&lt;/strong&gt; - Okay, so this one is tricky. I have a work
desktop, where I prefer to code, so I usually don't use the boards. But I've
seen people discussing stuff on whiteboards. Managers often have cabins with
glass walls, and I've seen them writing on walls, so I'll have to say yes to
this one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Competing against other interns&lt;/strong&gt; - NO. Google has separate projects for
different interns, and they are not supposed to compete against each other.
Some projects may have more than a single intern, in which case they'd
collaborate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Restrictions on dating&lt;/strong&gt; - I'm not even sure why I put this here. Maybe
because I was pretty surprised about this in the actual movie. We had to take
some ethics classes in the beginning of the intern, and yes, they did mention
that dating a person who is your immediate manager is inappropriate (and a
request for transfer is recommended, I think), but anything else is fine (yes,
this was part of the online mandatory ethics course).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What about other things? Surely there are more?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hmmm... this is going to take even longer than I originally thought.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game rooms&lt;/strong&gt; - We have 2 game rooms in our NYC office. These game rooms have
arcade games, table tennis tables, air hockey, video games (smash anyone?), pool,
tons of board games, foosball tables. I could go on (I'm not joking), but I think
you get the idea. Apart from this, we have a room dedicated to wall climbing too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Naps&lt;/strong&gt; - The whole office is filled with places to sleep. From nap pods to beds,
we have it all. It is also pretty convenient and practical since a nap during work
hours can really help to reset the mind. How convenient you ask? Look for yourself.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/sleep1.jpg&quot; width=&quot;49%&quot;&gt;&lt;img src=&quot;/img/sleep2.jpg&quot; width=&quot;49%&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tech stops&lt;/strong&gt; - If you've been to nice offices, they always have these
stationary racks, filled with all stationary you'd ever need. Like papers,
copies, pens, refills, clips, whiteners, etc. This is like that, but it is not
stationary. These are electronic accessories you'd ever need in your work.
Power converters, dongles, USB cables, chargers, privacy screens, mouse,
keyboards, mouse pads... You get the idea.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Massages&lt;/strong&gt; - Googlers (and interns) get some free professional massages an
year, and I haven't been to one yet. I have a booking coming up, and maybe I'll
elaborate later (yes, there are multiple massage rooms in the office).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Massage chairs&lt;/strong&gt; - Poor man's massage? I guess these chairs aren't cheap to
buy. But they are spread around the office so you keep running into them from
time to time. Unlike the professional massage, these are free to use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gyms&lt;/strong&gt; - Yes, the office has more than one gyms. Whether you are looking to
lift weights, or you are looking for a spin class, you can do it in the office
itself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Classes&lt;/strong&gt; - Google has classes for a variety of things. While many of the
classes are based on developing technical skills, or professional skills, there
are a number of classes on seemingly random topics. I took a cooking class,
where I baked a set of delicious cookies (which I got to take home).&lt;/p&gt;

&lt;h2&gt;Verdict&lt;/h2&gt;

&lt;p&gt;I really think that Google goes well and beyond to get its employees happy. I
didn't mention a lot of other things like people's pet projects that line up the
walls, the amazing chefs, and I really would elaborate more on the &quot;working&quot;
part of the intern later.&lt;/p&gt;

&lt;p&gt;But till then, if you're reading this, leave a comment below :)&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">The series:</summary></entry><entry><title type="html">An internâ€™s views - How I got here</title><link href="http://localhost:4000/2017/05/07/How-I-got-here/" rel="alternate" type="text/html" title="An intern's views - How I got here" /><published>2017-05-07T00:00:00-04:00</published><updated>2017-05-07T00:00:00-04:00</updated><id>http://localhost:4000/2017/05/07/How-I-got-here</id><content type="html" xml:base="http://localhost:4000/2017/05/07/How-I-got-here/">&lt;p&gt;AKA, how I got an internship in Google. In case you were wondering why the
actual title is so obscure, it is because I want this article to be mostly
linked by the rest of the (monthly) articles in this series (I'll update the
links as I write them)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/07/How-I-got-here/&quot;&gt;An intern's views - How I got here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/06/07/A-month-end-at-Google/&quot;&gt;An intern's views - A month's end at Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;An intern's views - How far have I come?&lt;/li&gt;
&lt;li&gt;An intern's views - End of diary&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So, for those who know me, you'd know that getting into Google had been my
&quot;dream&quot; for a long time. And by long, I mean like when I was in class 8th/9th,
and I barely knew what programming meant. I used to look at tech companies and
read an article about how good the Google offices are, and the thought of me
working there just stuck. Let's go through the things I think are important.&lt;/p&gt;

&lt;h3&gt;A Fair Resume&lt;/h3&gt;

&lt;p&gt;I originally wrote &quot;A good Resume&quot;, but frankly, I have seen people with not
a lot of experience get into Google, so I'm revising it to say &quot;Fair&quot;.&lt;/p&gt;

&lt;p&gt;I don't think this needs to be explained much. If you are from a good college,
have a fair CPI, it should be enough to get you an interview. If you don't,
you'd need some good projects up your sleeve, or good performance in programming
competitions. They don't expect you to be great, because contrary to our belief,
undergrads aren't expected to know everything in the whole universe.&lt;/p&gt;

&lt;p&gt;One thing I would like to stress though is not to pile up your resume with weak
points just to make it longer. If you are a B.Tech. student, a good resume
would be around 1 page, unless you have done tons of projects. Truthfully, most
resumes that I've seen students make, are pretty long, and while its nice that
you are proud of a lot of things you did, do you really think that a Google
recruiter would give any weightage to the fact that you won the blindfold
Rubik's cube national competition?&lt;/p&gt;

&lt;p&gt;Your Resume needs to be made differently for every company to apply to, and I
would suggest that you keep only the most important points on your Resume if
you apply to a Tech company like Google.&lt;/p&gt;

&lt;p&gt;For reference, &lt;a href=&quot;/res/resume.pdf&quot;&gt;here&lt;/a&gt; is a snapshot of the Resume I submitted
to Google - Short, Sleek and to the point.&lt;/p&gt;

&lt;h3&gt;Application Procedure&lt;/h3&gt;

&lt;p&gt;With fear of stating the obvious, to get into Google, you need to apply to
Google.  I mean really?&lt;/p&gt;

&lt;p&gt;Take my college for example. We have a placement cell in which students
register for campus placements. Now, if you sit for campus placements,
accepting an outside offer causes you to be labelled a &quot;defaulter&quot;.  What this
means for you is that you are allowed to sit for only 2 companies in campus
placements in the first week of next year.&lt;/p&gt;

&lt;p&gt;This is one of the &lt;em&gt;only&lt;/em&gt; things I don't like about my college. Look at this
from a game theoretic perspective. Let's follow a person's thought process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If I get the placement penalty, I'll get to sit for only two companies in my
final year.&lt;/li&gt;
&lt;li&gt;If those two companies don't select me, I'll be jobless.&lt;/li&gt;
&lt;li&gt;I don't want to be jobless.&lt;/li&gt;
&lt;li&gt;I can't take penalty.&lt;/li&gt;
&lt;li&gt;I have two choices, either only apply for campus placements, or only apply
outside.&lt;/li&gt;
&lt;li&gt;There's a higher chance to get a job via campus placements.&lt;/li&gt;
&lt;li&gt;I can't sit for outside placements.&lt;/li&gt;
&lt;li&gt;I won't apply to Google.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Unfortunately, I saw tens of people follow this thought process. None of them
even tried to apply to Google or Facebook or Amazon or any of the amazing
companies that didn't visit our college.&lt;/p&gt;

&lt;p&gt;There's nothing wrong with the above thought process, but if you would allow
me, I'd want you to ask yourself a couple of questions.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you get selected by Google, do you really think those 2 companies would
reject you?&lt;/li&gt;
&lt;li&gt;If you can get selected in Google, can't you similarly apply off-campus next
year as well?&lt;/li&gt;
&lt;li&gt;If you get selected in Google, would you really not go just because of a
penalty?&lt;/li&gt;
&lt;li&gt;If (3) was yes, you'd actually get to reject Google! Wouldn't that boost
your morale?&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The truth is, people don't apply because they are lazy. Campus placements are
easy, they are less scary and completely inside our comfort zone. Nobody likes
getting rejected, and to apply to a company that they think is beyond them,
when they already have an acceptance, is useless effort. &lt;em&gt;Sigh&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;They are somewhat right. Getting rejected is no fun. &lt;em&gt;Hell, I got rejected by
Facebook after some pretty good interviews&lt;/em&gt;, and the only suggestion I got from
my recruiter was &quot;definitely encourage you to communicate more effectively
during an interview&quot;. It will take me some time to work on that...&lt;/p&gt;

&lt;p&gt;Now that I've completely lost your attention, let's get to how you can actually
apply to Google. There are primarily two ways.&lt;/p&gt;

&lt;p&gt;The first is to apply online through Google's portal. If you are a first or
second year undergrad, you can apply for an Engineering Practicum Intern
(&lt;del&gt;which I didn't know existed&lt;/del&gt; as pointed out by &lt;em&gt;Bhavishya&lt;/em&gt; in comments,
apparently only for students from North America :/ ), and if you are third year
or above, you can apply for a Software Engineering Intern. You can view the
exact details on &lt;a href=&quot;https://careers.google.com&quot;&gt;https://careers.google.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The second is to apply through a referral.&lt;/p&gt;

&lt;p&gt;The catch is, when you apply through the online portal, there is some chance
that your resume would not pass the automated screening. While Google does a
good job of selecting good resumes, there still remains a possibility that your
resume will never be seen by a real person. If your resume is not machine
readable for example, this would dump any chance of your getting selected (or
even getting shortlisted).&lt;/p&gt;

&lt;p&gt;Applying through a referral ensures that your resume will be seen by a real
person. Sounds like partiality? Well, yeah, sort of. The fact is, successful
referral incentives mean that the Googler referring you would actually ensure
that you are a good candidate before forwarding your resume. This is like a
spam protection, and will prevent resumes filled with singing and table tennis
achievements from reaching a recruiter.&lt;/p&gt;

&lt;p&gt;Now, for my friends at IIT Kanpur, I would like to tell you that you have
absolutely brilliant Alumnus with a lot of them working at Google, Facebook and
all the other top companies and it would be very easy for you to take the
second procedure above. Consider yourself very lucky.&lt;/p&gt;

&lt;p&gt;In my case, I didn't take a referral from an Alumni, but rather from Google
Summer of Code.  I have blogged about GSoC before and so feel free to read
about it more. Basically, on successful completion of a project, GSoC provides
you with a one time Google Referral that you can &quot;redeem&quot; any time in the future
for any position you wish. Since I was interested in the internship, I took the
referral and applied.&lt;/p&gt;

&lt;p&gt;So you apply, and wait.&lt;/p&gt;

&lt;p&gt;Until someone from Google either mails you, or calls you.&lt;/p&gt;

&lt;p&gt;Oh shit, oh shit, oh shit!! I got a call! Now what?&lt;/p&gt;

&lt;p&gt;Dance. I mean it. You have crossed the most difficult part. Now the rest of the
process is easy to follow, because its pretty straightforward. You schedule the
interviews with your recruiter, and the person calls you for the interview at
the exact schedule time.  You try to answer the questions and code the problems
the best you can, and wait for the next call/email. If you get through all
interviews, Congrats!&lt;/p&gt;

&lt;p&gt;This is also the point when any favoritism ends. It doesn't matter how you
applied, who you are, where you are from, how your resume was. After this
point, you will be judged solely on your performance in the interviews.&lt;/p&gt;

&lt;h3&gt;Timeline&lt;/h3&gt;

&lt;p&gt;So you can get articles like these anywhere. Why read mine? Because I like to
include personal experience, and I wish more people did. It helps a lot to know
what to expect at each step of the process. So let's go through the timeline -
or rather how much I was made to wait for every step of the road.&lt;/p&gt;

&lt;table class=&quot;tg&quot; style=&quot;width:200%; line-height:2em&quot;&gt;
&lt;tr&gt;
&lt;th class=&quot;tg-031e&quot;&gt;Date&lt;/th&gt;
&lt;th class=&quot;tg-031e&quot;&gt;Event&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;23rd Sep&lt;/th&gt;
&lt;td class=&quot;tg-031e&quot;&gt;I mailed GSoC support asking for a referral&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;26th Sep&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;GSoC support confirmed that they had received my request&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;11th Oct&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;I got a mail from Google recruiter about scheduling my interviews&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;17th Oct&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;They confirmed the date of 26th October for two, one hour, interviews&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;26th Oct&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;Two interviews, each lasting for about 40 minutes + 10 minutes random talk.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;The interviews were over the phone, with laptop for coding online.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;Learnt &lt;strong&gt;never to ask for interview over phone&lt;/strong&gt;. The voice was choppy, and combined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;with the interviewer's accent, I couldn't understand anything. Went OK, not too good.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;2nd Nov&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;They asked to schedule one more interview - I requested an interview over Hangouts instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;7th Nov&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Next interview was scheduled for 17th November&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;17th Nov&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Interview on Hangouts. Voice was clear, and interview went much better.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;6th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;They confirmed that they are moving forward to the project matching (I had 6 weeks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;to get selected for a project)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;7th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Recruiter called and explained the next steps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;8th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;I had to fill a form on my interests and strengths to be matched to a team with&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;similar work and interests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;13th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;i&gt;I receive rejection mail from Facebook. I cry.&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;14th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Back to Google: Recruiter informs me of a potential project host who wants to interview me!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Interview scheduled for 15th December (EST) or 16th Dec (IST)!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;16th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;12:15 AM - Interview for about 30 min. I loved the project and talked enthusiastically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;4:04 AM - &lt;i&gt;Recruiter mails me to tell that the host would love to work with me ðŸ˜²&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;4:08 AM - I confirm that I would like to work in the project as well.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;4:15 AM - Recruiter replies with steps to complete offer acceptance&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;


&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3&gt;Few random points about the interview&lt;/h3&gt;

&lt;p&gt;I had to give three technical interviews, and one project interview. This would
be different for different people.  Usually, they start with two technical
interviews, and if they are not sure, they take one more. Once the technical
interviews are done, one of two things can happen - Either you get an offer
first, and then you sit for project interviews (with much less pressure, since
it is no longer deciding your fate), or as in my case, you'd be asked to sit
for project interviews, and you'd get an offer IF you get selected in a project
within 6 weeks.&lt;/p&gt;

&lt;p&gt;For me, the project interviews were easier, because I experiment
a lot with random tech and software, however, for many people it does take 6
weeks and it is possible for you to not get a project at all. All I can say is
that gaining knowledge beyond your college books would help a lot.&lt;/p&gt;

&lt;p&gt;Contrary to popular belief, the interviews are NOT tough. The questions asked in
my technical interview were the sort of questions you would expect on the mid term
exam of Algorithms and Data Structures. They focus on your ability to code the solution
you propose, and how efficient and clean your solution is.&lt;/p&gt;

&lt;p&gt;During the project matching phase, telling your recruiter about your strengths and
interests would help as he/she would be able to match you with relevant teams more
quickly AND you would be able to get a team you'd enjoy working in (win-win).&lt;/p&gt;

&lt;p&gt;This is all I can remember about my experience for now. I may update this
article with more points as I remember them. I know the whole article has been
unstructured and jumpy, and its mostly because I waited too long to write this
article and now &quot;fragmented&quot; is exactly how I would describe my memory of the
experience. If you have any specific questions, ping me on Facebook. You'll
find the contact details on the &quot;About Me&quot; page on top.&lt;/p&gt;

&lt;p&gt;I'd only leave you with one thought. Do you really think you would regret the
experience even if you tried and failed?&lt;/p&gt;

&lt;p&gt;Thanks, and have a nice day :)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">AKA, how I got an internship in Google. In case you were wondering why the actual title is so obscure, it is because I want this article to be mostly linked by the rest of the (monthly) articles in this series (I'll update the links as I write them)</summary></entry><entry><title type="html">YourHonour: A k8s based distributed programming judge</title><link href="http://localhost:4000/2016/09/26/YourHonour-k8s-programming-judge/" rel="alternate" type="text/html" title="YourHonour: A k8s based distributed programming judge" /><published>2016-09-26T00:00:00-04:00</published><updated>2016-09-26T00:00:00-04:00</updated><id>http://localhost:4000/2016/09/26/YourHonour-k8s-programming-judge</id><content type="html" xml:base="http://localhost:4000/2016/09/26/YourHonour-k8s-programming-judge/">&lt;p&gt;So, this is something I have been working on recently for some time. The
project's name is YourHonour, and is is a Kubernetes(k8s) based Online Judge for
organising programming competitions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;YourHonour&lt;/strong&gt; came into being because the Open Source solutions already present
either do not fit all the criteria, or are just too hard to setup. The ones
that are easy to set up, as well as provide complete functionality are either
paid, or non-free.&lt;/p&gt;

&lt;p&gt;Anyway, I decided to build my own judge. Hell, how hard can it be? As it turns
out, creating a judge isn't as easy as I initially thought. There are way too
many things that can go wrong at any given time, most of the problems stemming
from the fact that the judge is supposed to run arbitrary code from the user on
the server, and make sure that it can't do anything malicious.&lt;/p&gt;

&lt;p&gt;Lastly, the judge should properly utilize resources from the cluster or machine
on which it is running, and properly give the resources to each program. It should
schedule the tasks properly, and kill them after a desired time. When listed, these
look something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run Isolated code&lt;/li&gt;
&lt;li&gt;No internet access to executable&lt;/li&gt;
&lt;li&gt;Kill after desired time&lt;/li&gt;
&lt;li&gt;Possibility to schedule on a cluster of computers/VMs&lt;/li&gt;
&lt;li&gt;Limit resources, distribute resources&lt;/li&gt;
&lt;li&gt;Handle exit status/signal of the user's code&lt;/li&gt;
&lt;li&gt;Preventing malicious behaviour&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;strong&gt;Let's tackle these one by one:&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Run isolated code&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The first thing that comes to mind when talking about isolation is a container.
That's pretty much it. That is probably the most sensible way to do it. In my
implementation, &lt;strong&gt;I use docker containers to run the user's code&lt;/strong&gt;. This way,
the container is isolated, and the code inside can't get access to any of my
files.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Kill after desired time&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Killing a process after desired time is important in a process because we need
to catch any kind of TimeLimit errors too. To do this, we need to keep a track
of the running process somehow. Usual way to do this is to have the process as
a child of our own process. Then the parent would be able to wait on the child
as well as kill it if need be. We will later see that just killing the spawned
process may not be enough.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Scheduling on cluster&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Since I went with docker to isolate the codes, the obvious choice for container
orchestration was the brilliant Kubernetes. The only problem - terrible
documentation. Half of their links in the docs keep breaking. But that is not
my concern. Usually a google search can be used to find non-404 pages.
Kubernetes can be used to schedule the containers with both memory and CPU
limits, as well as is pretty easy to setup (especially the docker-multinode
method).&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt; Limit and distribute resources&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Kubernetes provides configuration for this, and thus isn't a concern.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Exit/Signal status of child&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;As mentioned before, if the process is run as a child of our process, the
parent can listen to the events of the child, and find out any data needed
about the child.  This is implemented by having the parent call the fork call,
rewrite the stdout and stdin file descriptors, change user permissions and
execv the child process. Then the parent calls wait on the child, with a wakeup
alarm signal registered on the kernel.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Restrict internet access in container&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;I didn't find a very elegant solution to this. The containers which run without
&lt;code&gt;--privileged&lt;/code&gt; flag, &lt;strong&gt;don't have any way to turn off internet access from
inside the container&lt;/strong&gt;. And the internet can't be turned off before the
continer is launched because the container uses the network to fetch the
input/output files from local machines on cluster.&lt;/p&gt;

&lt;p&gt;On the other hand, adding the &lt;code&gt;--privileged&lt;/code&gt; flag gives the container access to
my devices, including my hard drive, which a malicious code could use to
potentially mount and gain access to my system. What I ended up doing was a
compromise between the two. I run the docker with &lt;code&gt;--privileged&lt;/code&gt; flag, but
before the executable is called, the &lt;code&gt;wrapper&lt;/code&gt; (or the &quot;parent&quot;) sets its UID
to an unprivileged user. Before doing so, the parent turns off the internet in
the container. Hope is that there is no way for the unprivileged user to turn
its internet connection back on (most probably true), however I still feel
uncomfortable using the &lt;code&gt;--privileged&lt;/code&gt; flag.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Prevent malicious behaviour&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This one is probably the most involved since we don't know what is meant by
&lt;em&gt;malicious&lt;/em&gt;. We have already stopped it from accessing internet, and our files,
drives and devices are safe. We have also tried our best to stop it from using
too many resources by limit container resources. So now what?&lt;/p&gt;

&lt;p&gt;Unfortunately, it is not easy to see what is missing. So I had some seniors in
security look over the program and test it for vulnerabilities. They found two
major problems (till now):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DoS attacks crush the server very easily:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apparently nodejs server doesn't have protection against DoS attacks.
&lt;em&gt;&lt;strong&gt;Sigh&lt;/strong&gt;&lt;/em&gt;. I didn't want to add a proxy gateway just to filter out DoS
attacks, so for now I have patched the server with a temporary solution. If
the server detects multiple consecutive requests (too many), it adds an
iptable rule to drop connections from that IP. This isn't perfect, but it
works. The server recovers from the attack in a few seconds, and the source
is blocked from making any requests for some time (configurable).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fork bombs in source code:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Even though the resources for the container are limited, a fork bomb increases
the number of processes a lot faster than the used up memory. This completely
clutters up the ready queue and prevents the parent from being scheduled. In
worst cases (and the behaviour is unpredictable), the docker container ends up
crashing the host node (i.e.  computer or VM) as well. While the ideal solution
would be to restrict the number of allowed processes, but I couldn't find the
correct way to do this in docker.  As an alternative, &lt;strong&gt;I increase the child's
niceness value&lt;/strong&gt; making it less important than the parent in the scheduling
algorithm. The &lt;strong&gt;parent sends the kill signal to ALL processes it is allowed to
send to&lt;/strong&gt;, and hence kills all descendants of the malicious process as well.
This seems to work well, and I haven't had much problem since.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">So, this is something I have been working on recently for some time. The project's name is YourHonour, and is is a Kubernetes(k8s) based Online Judge for organising programming competitions.</summary></entry><entry><title type="html">Learning from mistakes: Bugzilla Landfills</title><link href="http://localhost:4000/2016/06/09/Bugzilla-Landfills/" rel="alternate" type="text/html" title="Learning from mistakes: Bugzilla Landfills" /><published>2016-06-09T00:00:00-04:00</published><updated>2016-06-09T00:00:00-04:00</updated><id>http://localhost:4000/2016/06/09/Bugzilla-Landfills</id><content type="html" xml:base="http://localhost:4000/2016/06/09/Bugzilla-Landfills/">&lt;p&gt;This post is regarding a recent incident that happened when I was working for
my project in Google Summer of Code.&lt;/p&gt;

&lt;p&gt;My day's task was to automate the filing of a bug in bugzilla if and when a
build fails. Though, not too hard, it would obviously require testing, because
I can't just assume that my code would work the way it is supposed to.&lt;/p&gt;

&lt;p&gt;This didn't seem like much of a problem at that time. What I decided to do was,
test on a single bug and delete it when I'm done. Simple Enough?&lt;/p&gt;

&lt;p&gt;As it turns out, it wasn't so simple. And I would've known that, had I done a
bit of a research. You see, once a bug is reported, it can be edited, yet
closing, or deleting the bug is something only the administrators are capable
of. So, by creating a bug in bugzilla I inadvertantly sent an email about a
bug to numerous people.&lt;/p&gt;

&lt;p&gt;Anyway, for future reference, there is something called a Bugzilla Landfill
that you can use for testing out something on a Bugzilla.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Thanks for reading&lt;/i&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">This post is regarding a recent incident that happened when I was working for my project in Google Summer of Code.</summary></entry><entry><title type="html">Determining legal USE Flag combinations using a CNF SAT Solver</title><link href="http://localhost:4000/2016/05/13/SAT-Solver/" rel="alternate" type="text/html" title="Determining legal USE Flag combinations using a CNF SAT Solver" /><published>2016-05-13T00:00:00-04:00</published><updated>2016-05-13T00:00:00-04:00</updated><id>http://localhost:4000/2016/05/13/SAT-Solver</id><content type="html" xml:base="http://localhost:4000/2016/05/13/SAT-Solver/">&lt;p&gt;I spent my time doing something rather interesting today.&lt;/p&gt;

&lt;p&gt;In my proposal, I had
mentioned that the USE flag combinations to be tested would be:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Without any USE flag turned on&lt;/p&gt;

&lt;p&gt;With all USE flags turned on&lt;/p&gt;

&lt;p&gt;Few random combinations based on default flags,
or inverse of default flags or those generated by tatt.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yesterday, a guy, Harald Timeraider pointed out that some of the USE flag combinations
given by the above rules may not be legal. For example, if an ebuild specifies
&lt;code&gt;REQUIRED_USE=&quot;^^ (a b c)&quot;&lt;/code&gt; then EXACTLY one flag out of &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; should be
enabled. This doesn't fall under &quot;without USE flags&quot; or &quot;with all USE flags&quot; category.&lt;/p&gt;

&lt;p&gt;At first I was thinking that for combination os USE flags, I would use the portage API
to verify if the USE flag combo was valid and is not, I would randomly generate another
combination. But soon, as it always happens, I began to overthink the problem and
decided to model the problem as a graph problem. More specifically, as a boolean
satisfiability problem.&lt;/p&gt;

&lt;p&gt;So, long story short, here's what I did at
&lt;a href=&quot;https://github.com/pallavagarwal07/SummerOfCode16/blob/dd07d92004b60a00531881773ed6a0a1b41fbd35/Containers/scripts/FlagGenerator/solver.py&quot;&gt;SummerOfCode16&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We have five main kinds of operators.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;|| (flag1 flag2 flag3..)&lt;/code&gt; operator means that the following bracket would need to have AT LEAST one flag
enabled. This is a simple OR operator between the operands.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;flag1? (flag2 flag3 ...)&lt;/code&gt; operator means that the following bracket would have to be
true as a whole if &lt;code&gt;flag1&lt;/code&gt; is enabled. This is equivalent to the implication operator.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;^^ (flag1 flag2 flag3..)&lt;/code&gt; operator means that the following bracket will have
EXACTLY one flag enabled. The wiki describes it as an XOR operator, which I believe is
inaccurate since XOR should allow odd number of operands to be true. For my case, I
model it as a 1-from-n operation. For example, for three variables &lt;code&gt;a, b, c&lt;/code&gt;:&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;center&gt;&lt;code&gt;(a &amp; !b &amp; !c) | (!a &amp; b &amp; !c) | (!a &amp; !b &amp; c)&lt;/code&gt;&lt;/center&gt;


&lt;p&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;!flag1&lt;/code&gt; operator is basically a negation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;flag1 flag2&lt;/code&gt; operator (whitespace) is basically an AND operation unless the parent
bracket is preceded by &lt;code&gt;||&lt;/code&gt; or &lt;code&gt;^^&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Also, because I was having fun and wasn't sure if Portage supported it, I added support
for arbitrary amount of nesting, given that the above rules are all followed.&lt;/p&gt;

&lt;p&gt;The code I wrote uses &lt;code&gt;satispy&lt;/code&gt; to convert constructed SAT formula into CNF form, and
replaces variables by numbers to convert into a format that &lt;code&gt;pycosat&lt;/code&gt; can accept.&lt;/p&gt;

&lt;p&gt;Even though &lt;code&gt;satispy&lt;/code&gt; also has support for solving the CNF formula, I went with &lt;code&gt;pycosat&lt;/code&gt;
for actually solving the CNF formula because it provides an iterator to get as many
solutions as I want. Also the output is a bit easier on the eyes in the form of numbers.&lt;/p&gt;

&lt;p&gt;If you have any queries, post them below or open up an issue on github.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Thanks for reading&lt;/i&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">I spent my time doing something rather interesting today.</summary></entry><entry><title type="html">Reference Sheets and Useful Links</title><link href="http://localhost:4000/2016/05/13/Reference-Sheets-and-Useful-Links/" rel="alternate" type="text/html" title="Reference Sheets and Useful Links" /><published>2016-05-13T00:00:00-04:00</published><updated>2016-05-13T00:00:00-04:00</updated><id>http://localhost:4000/2016/05/13/Reference-Sheets-and-Useful-Links</id><content type="html" xml:base="http://localhost:4000/2016/05/13/Reference-Sheets-and-Useful-Links/">&lt;p&gt;This post was long due. I often find blog posts, reference sheets and useful links that
I feel I should bookmark. However, I often lose these bookmarks when I shift Operating
Systems or browsers (which happens very often). I am hoping that this will be a better
and a more reliable way to keep track of all these resources.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://python-future.org/compatible_idioms.html&quot;&gt;Python Future&lt;/a&gt;: This is a brilliant
cheat sheat to write cross compatible code for both PYTHON-2 and PYTHON-3&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/&quot;&gt;What Color is Your Function?&lt;/a&gt;:
An absolutely amazing article about the design choices of a &lt;em&gt;modern language&lt;/em&gt;.
I won't spoil the surprise by revealing which language and what choices.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.faqs.org/docs/artu/&quot;&gt;Art of Unix Programming&lt;/a&gt;: If you aren't into reading
plain text articles, atleast go through the Appendix D. You'll find some hilarious
Unix bedtime stories :)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/11227809/why-is-it-faster-to-process-a-sorted-array-than-an-unsorted-array&quot;&gt;Sorted vs Unsorted Array&lt;/a&gt;:
One of the most upvoted questions on stackoverflow. This may be obvious to me now,
but I wish I knew this before I took the Architecture course in IITK. Must Read.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/927358/how-to-undo-last-commits-in-git&quot;&gt;Undo Last Git Commit&lt;/a&gt;:
Another one stolen from StackOverflow highest voted category.
&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="tagged" /><summary type="html">This post was long due. I often find blog posts, reference sheets and useful links that I feel I should bookmark. However, I often lose these bookmarks when I shift Operating Systems or browsers (which happens very often). I am hoping that this will be a better and a more reliable way to keep track of all these resources.</summary></entry><entry><title type="html">Ultimate control over Mobile Browser with Firefox</title><link href="http://localhost:4000/2016/05/06/Ultimate-control-over-mobile-browser/" rel="alternate" type="text/html" title="Ultimate control over Mobile Browser with Firefox" /><published>2016-05-06T00:00:00-04:00</published><updated>2016-05-06T00:00:00-04:00</updated><id>http://localhost:4000/2016/05/06/Ultimate-control-over-mobile-browser</id><content type="html" xml:base="http://localhost:4000/2016/05/06/Ultimate-control-over-mobile-browser/">&lt;p&gt;It is no secret that I love firefox. Even though sometimes, it can run a bit slower than
Chrome, Firefox has always provided me with better developer tools and better control
over all of my settings, even those which are usually unavailable via &lt;code&gt;about:config&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, it was only recently that I discovered, that &lt;code&gt;about:config&lt;/code&gt; works flawlessly
on the mobile version of the firefox browser too. That means, all of the features you'd
think that mobile browsers miss, like proxy settings, cache, pipelining settings, etc.
can be found just by typing &lt;code&gt;about:config&lt;/code&gt; on the URL.&lt;/p&gt;

&lt;p&gt;Before you go off try, and fail - note that you need to understand how some of those
settings play together. For example, to set proxy settings, the URLs and the ports
themselves aren't enough. The &lt;code&gt;network.proxy.type&lt;/code&gt; needs to be set to 2 (which is the
equivalent of the menu option &quot;Manual proxy configuration&quot;)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="tip" /><summary type="html">It is no secret that I love firefox. Even though sometimes, it can run a bit slower than Chrome, Firefox has always provided me with better developer tools and better control over all of my settings, even those which are usually unavailable via about:config.</summary></entry><entry><title type="html">SSH port forwarding and some cool uses</title><link href="http://localhost:4000/2016/05/06/SSH-port-forwarding-and-some-cool-uses/" rel="alternate" type="text/html" title="SSH port forwarding and some cool uses" /><published>2016-05-06T00:00:00-04:00</published><updated>2016-05-06T00:00:00-04:00</updated><id>http://localhost:4000/2016/05/06/SSH-port-forwarding-and-some-cool-uses</id><content type="html" xml:base="http://localhost:4000/2016/05/06/SSH-port-forwarding-and-some-cool-uses/">&lt;p&gt;I'll begin with some of the bare minimum and absolutely amazing things ssh port
forwarding is capable of, and see if I can convert this to a proper blog post
later.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;1. Local port forwarding&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -L8081:example.com:80 pallav@myserver.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Meaning: Opens a SSH connection to myserver.com, and forward all requests to &lt;strong&gt;my&lt;/strong&gt; port 8081
to port 80 (default http port) of example.com &lt;em&gt;via&lt;/em&gt; myserver. Thus, if example.com is blocked
on my PC, but it can be accessed by some other PC which I have ssh access to, then I can use
this command to gain access to the blocked website (The website is now accessible on
localhost:8081 in my browser). Also, ssh connections are encrypted, so the only thing ISP sees
is an open connection to myserver, and not the website I'm trying to access.
Unfortunately, many websites you see day to day check the hostname of request (which
would be localhost) and won't work this way. However, this trick is great to forward
SSH connections over multiple hops. (For bypassing website restrictions, read on)&lt;/p&gt;

&lt;p&gt;Apart from this, you can forward any arbitrary port data to any arbitrary port, from
this point, only thing stopping you is your imagination.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;2. Remote port forwarding&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -R8081:example.com:22 pallav@myserver.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is extremely similar to local port forwarding, which is why it causes a lot of
people confusion. In previous case, the port being mapped was on local machine and the
request was being sent to example.com via remote server. In this case, the port being
mapped is on the remote server, while the request being sent is from local computer.
Get the difference? Good.&lt;/p&gt;

&lt;p&gt;This is typically used if the local computer doesn't have a public IP address, and you
need access to it from outside. In that case, something like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -R8081:localhost:22 pallav@myserver.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Would give ssh access to (previously publically unaccessible) local PC via port 8081 of
remote server.&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;3. Dynamic port forwarding&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -D8081 pallav@myserver.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In local port forwarding, we were restricted to forwarding request to a particular port
of example.com. But what if we want the requests to reach different destinations, on
different ports? By the above command, the port 8081 on localhost is dynamically mapped
such that, localhost:8081 can be used as a socks proxy for any request. Thus, this means
you can use remote server as a free VPN, by using the above command, and then setting
localhost:8081 as the socks proxy in the browser (leave other fields empty).&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Quiz time&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Let's say you are in a hotel that has free wifi. But like every hotel, once you connect
to the wifi, it redirects you to the login page, which only allows one login per room
â˜¹. But you are a hacker, and decide to share the connection with you brother, who also
has a laptop. What do you do?&lt;/p&gt;

&lt;div class=&quot;spoiler&quot;&gt;Turn on sshd service on one laptop (whichever one logins to internet)
Use the other laptop to ssh into this one using local ip address (shown in ifconfig)
. While SSHing, set up dynamic port forwarding. Now internet is accessible via
socks proxy through the tunnel.&lt;/div&gt;


&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">I'll begin with some of the bare minimum and absolutely amazing things ssh port forwarding is capable of, and see if I can convert this to a proper blog post later.</summary></entry><entry><title type="html">Google Summer of Code with Gentoo</title><link href="http://localhost:4000/2016/04/30/Google-Summer-of-Code-with-Gentoo/" rel="alternate" type="text/html" title="Google Summer of Code with Gentoo" /><published>2016-04-30T00:00:00-04:00</published><updated>2016-04-30T00:00:00-04:00</updated><id>http://localhost:4000/2016/04/30/Google-Summer-of-Code-with-Gentoo</id><content type="html" xml:base="http://localhost:4000/2016/04/30/Google-Summer-of-Code-with-Gentoo/">&lt;p&gt;I am excited to say that I've been accepted for this year's summer of code under
Gentoo Organisation. &lt;a href=&quot;/gsoc&quot;&gt;This section of the blog&lt;/a&gt; will be dedicated to documenting
anything and everything I learn that is interesting or remotely related to my project.&lt;/p&gt;

&lt;p&gt;My proposal for the project can be found &lt;a href=&quot;/img/gsoc.pdf&quot;&gt;here&lt;/a&gt;. The abstract for the
same has been given below.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Gentoo is an operating system with extreme focus on configurability and performance.
To provide fully customizable experience, without interfering with the stability of
the system, Gentoo has a concept of masked packages. These masked packages (or
versions) are either untested, or are known to be unstable and are installed only if
the user explicitly unmasks them. While this concept is a boon to the stability of
the operating system, the current implementation requires the packages to be tested
manually by a team of developers. This significantly increases the time in which new
packages are made safely available to the users. The goal of this project is to
provide a mechanism to test and stabilize the packages automatically with little or
no human intervention.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The first phase of summer of code is the community bonding period (April 23rd - May 22nd)
, which has already started. The first and foremosts tasks for now (community bonding)
are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get familiar with architecture testing.&lt;/li&gt;
&lt;li&gt;Contact people who can give suggestion on my project.&lt;/li&gt;
&lt;li&gt;Create a plan of action for the coding period, by taking the suggestions into account
with the current plans.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;For the first, architecture testing, I tested and stabilized a new version of gitflow a
few days ago.  The package itself was small, with no complicated dependencies and was
easy enough to handle. But since, my project also aims to create a platform for
maintainers to create automated test scripts, I had been thinking of ways to implement
that.&lt;/p&gt;

&lt;p&gt;I have also been following Agostino's (Ago's) &lt;a href=&quot;https://blogs.gentoo.org/ago/&quot;&gt;blog&lt;/a&gt; for
rules/tips pertaining to architecture testing, specifically for the more difficult to
test things like Kernel, libraries, kernel dependent packages (like virtualbox) etc.&lt;/p&gt;

&lt;p&gt;Lastly, I've been looking at the source of package management and testing related tools
in Gentoo, including tatt and eix.&lt;/p&gt;

&lt;p&gt;I would keep on updating this page with more information as I find it.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Thanks for reading&lt;/i&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">I am excited to say that I've been accepted for this year's summer of code under Gentoo Organisation. This section of the blog will be dedicated to documenting anything and everything I learn that is interesting or remotely related to my project.</summary></entry><entry><title type="html">Easy sharing of SSH keys</title><link href="http://localhost:4000/2016/04/27/SSH-keys/" rel="alternate" type="text/html" title="Easy sharing of SSH keys" /><published>2016-04-27T00:00:00-04:00</published><updated>2016-04-27T00:00:00-04:00</updated><id>http://localhost:4000/2016/04/27/SSH-keys</id><content type="html" xml:base="http://localhost:4000/2016/04/27/SSH-keys/">&lt;p&gt;This tip may be obvious to many people, but I feel this worth mentioning. A lot of us
have SSH keys set up for github. I found out today, from a friend (github/sakshamsharma)
that you can actually share your public keys with others by giving them your github
username.
For example,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl https://github.com/pallavagarwal07.keys &amp;gt;&amp;gt; ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;would give me ssh/scp access to your PC.&lt;/p&gt;</content><author><name></name></author><category term="tip" /><summary type="html">This tip may be obvious to many people, but I feel this worth mentioning. A lot of us have SSH keys set up for github. I found out today, from a friend (github/sakshamsharma) that you can actually share your public keys with others by giving them your github username. For example,</summary></entry></feed>