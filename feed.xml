<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-01-07T17:38:50+00:00</updated><id>http://localhost:4000/</id><title type="html">VARSTACK</title><subtitle></subtitle><entry><title type="html">Encrypted posts on a Static Website</title><link href="http://localhost:4000/2018/01/07/Encrypted-posts-on-a-static-website/" rel="alternate" type="text/html" title="Encrypted posts on a Static Website" /><published>2018-01-07T00:00:00+00:00</published><updated>2018-01-07T00:00:00+00:00</updated><id>http://localhost:4000/2018/01/07/Encrypted-posts-on-a-static-website</id><content type="html" xml:base="http://localhost:4000/2018/01/07/Encrypted-posts-on-a-static-website/">&lt;p&gt;Happy New Year everyone!&lt;/p&gt;

&lt;p&gt;A couple of days ago, I decided to start writing a detailed guide to GSoC and
open source contributions. However, I have seen many people read articles
without actually doing anything, and that really upsets me. As a result, I
decided to create an obstacle course along with the article series so that
people would have to show some proof of work before they can proceed to the
next blog post.&lt;/p&gt;

&lt;p&gt;My immediate problem however was much simpler. This is a statically generated
blog. There is no configurable server side. This means that if I decide to
password protect an article, the password verification would have to happen
on the client side, and doing that securely is fairly non-trivial.&lt;/p&gt;

&lt;p&gt;Anyway, before we move to the implementation, try to visit the test page for
the final encryption prototype. The password to access the page is &lt;code&gt;testpage&lt;/code&gt; -
&lt;a href=&quot;/encrypted/testpage&quot;&gt;Encrypted Page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty cool, right? If you are interested in computer security, please go ahead
and try to find a way to retrieve the post content without using the password.
Now, when undertaking such a project, there are a couple of things that have to
be kept in mind.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;Ease of access&lt;/dt&gt;
&lt;dd&gt;The end user shouldn't have any difficulty accessing the content if they
are aware of the password. This means that we need the decryption algorithm
written in javascript (there is no server side, but the data needs to be
decrypted on the client).&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;Ease of setup&lt;/dt&gt;
&lt;dd&gt;I shouldn't have to manually encrypt decrypt the file(s) every time I need
to edit them. That would be a pain in the ass, as well as leave a large room
for errors on my part.&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;Flexibility&lt;/dt&gt;
&lt;dd&gt;Each post on the blog should have a unique password, so that unlocking one
post doesn't mean access to rest of the posts.&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;Security&lt;/dt&gt;
&lt;dd&gt;Since the blog is open source, the posts (in form of &lt;code&gt;.md&lt;/code&gt; files) are
available on Gitlab. Thus, the source files themselves need to be encrypted
too.&lt;/dd&gt;
&lt;/dl&gt;&lt;/li&gt;
&lt;li&gt;&lt;dl&gt;
&lt;dt&gt;Automation (CI)&lt;/dt&gt;
&lt;dd&gt;Since the blog needs to built by the Gitlab CI, CI needs access to:&lt;/dd&gt;
&lt;/dl&gt;

&lt;ul&gt;
&lt;li&gt;Decrypted version of posts &lt;strong&gt;OR&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Encrypted pre-built (markdown to HTML) files &lt;strong&gt;OR&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Keys to decrypt the markdown, and then encrypt after building the HTML.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Points 2, 3 and 5 seem rather incompatible with each other. Gitlab CI can be
given secret password/env variables, but doing that for each post would be
extremely inconvinient. Similarly, I may need to edit these posts at any time,
and there is no way I can remember all the passwords of all the files. I can't
risk keeping the passwords in any of my RC files either, since I version
control them to GitHub as well
(&lt;a href=&quot;https://github.com/pallavagarwal07/ConfigManagement&quot;&gt;https://github.com/pallavagarwal07/ConfigManagement&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;To resolve these conflicts, I decided to keep a single master password to
encrypt the source markdown files. This password is the strongest one, and if
it falls, all the posts would be decrypted.&lt;/p&gt;

&lt;p&gt;The posts however on the blog are encrypted by the CI itself after it converts
the markdown files into HTML. These are encrypted by the password mentioned
inside the decrypted text itself. As you'd see, in the &lt;a href=&quot;/encrypted/testpage&quot;&gt;Test
Page&lt;/a&gt;, the password is mentioned in the content of the
post itself. The password(s) used to encrypt the generated HTML file content
is usually easier (e.g. &lt;code&gt;testpage&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Regarding ease of setup, it is necessary to create a workflow that doesn't
leave the decrypted version of the posts in my repository. Since my everyday
editor is vim, the easiest method was to configure vim to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Detect the file being opened is encrypted.&lt;/li&gt;
&lt;li&gt;Ask user for password.&lt;/li&gt;
&lt;li&gt;Decrypt the file into memory.&lt;/li&gt;
&lt;li&gt;Turn off swap file management and persistent undo history.&lt;/li&gt;
&lt;li&gt;Write decrypted file to vim buffer.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Similarly, on saving the file, vim should:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Encrypt the buffer contents (with the earlier asked password).&lt;/li&gt;
&lt;li&gt;Write the encrypted contents to buffer.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This way, I open my file normally with vim (or neovim), and edit my file as
usual. Vim takes care of all the heavy lifting for me.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;10 points to Ravenclaw!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thankfully, the configuration isn't too hard, and is inspired from how vim
used to handle encryption using crypt (which is horribly broken).&lt;/p&gt;

&lt;p&gt;Credits: &lt;a href=&quot;http://vim.wikia.com/wiki/Encryption&quot;&gt;http://vim.wikia.com/wiki/Encryption&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;augroup CPT
  au!
  au BufReadPre *.cpt set bin
  au BufReadPre *.cpt set viminfo=
  au BufReadPre *.cpt set noswapfile
  au BufReadPost *.cpt let $MASTER_KEY_VARSTACK = inputsecret(&quot;Password: &quot;)
  au BufReadPost *.cpt silent '[,']!go run ~/proj/varstack/_plugins/decrypt.go
  au BufReadPost *.cpt set nobin
  au BufWritePre *.cpt set bin
  au BufWritePre *.cpt '[,']!go run ~/proj/varstack/_plugins/encrypt.go
  au BufWritePost *.cpt u
  au BufWritePost *.cpt set nobin
augroup END
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keen observers would notice &lt;code&gt;encrypt.go&lt;/code&gt; and &lt;code&gt;decrypt.go&lt;/code&gt; in the midst of the
vim configuration. This is where the magic happens 😉. As the name suggests,
these files encrypt (and decrypt) the data read from &lt;code&gt;stdin&lt;/code&gt; and write the
output to &lt;code&gt;stdout&lt;/code&gt;. The passphrase is read from the environment variable
&lt;code&gt;MASTER_KEY_VARSTACK&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, I wrote the encryption and decryption codes in Go. But in the beginning, I
mentioned I would need the decryption protocol in javascript since the
decryption would have to happen on the client side, on the user's browser.
At first look, it seems as though it might've been better to use node to write
the encryption/decryption methods, since the same could've been used for the
browser.&lt;/p&gt;

&lt;p&gt;Yeah, but the truth is that unlike Javascript, Go has inbuilt libraries for AES
and other encryption protocols. Writing encryption code in JS would have been
a - not so pleasant experience - to put it mildly. So instead, I decided to use
the Go code itself for the client side decryption.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wait what?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;GopherJS compiles Go code (golang.org) to pure JavaScript code. Its main
purpose is to give you the opportunity to write front-end code in Go which
will still run in all browsers.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you haven't ever checkout out
&lt;a href=&quot;https://github.com/gopherjs/gopherjs&quot;&gt;GopherJS&lt;/a&gt;, today is your lucky day.
GopherJS compiles Go to Javascript, and is compatible with (almost) all Go
features.  Don't believe me? See their &lt;a href=&quot;https://github.com/gopherjs/gopherjs/blob/master/doc/packages.md&quot;&gt;compatibility
table&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So using GopherJS, I wrote a &lt;a href=&quot;https://jekyllrb.com/docs/plugins/#converters&quot;&gt;Jekyll
converter&lt;/a&gt;, so that any &lt;code&gt;.go&lt;/code&gt;
files in my blog's source would be compiled to &lt;code&gt;.js&lt;/code&gt; in the website. After
that, I wrote a small Go code that used the earlier writter &lt;code&gt;decrypt.go&lt;/code&gt; to
decrypt the encrypted content within the &lt;code&gt;body&lt;/code&gt; tags of a webpage, and set my
encrypted page to include the corresponding &lt;code&gt;.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Finally, I had to write one last &lt;a href=&quot;https://jekyllrb.com/docs/plugins/#converters&quot;&gt;Jekyll
converter&lt;/a&gt; to read &lt;code&gt;.cpt&lt;/code&gt; files
(which were basically the markdown files encrypted with master password),
decrypt them with the master password, figure out the output password from the
decrypted text, convert markdown to HTML using existing converter, and finally
encrypt the converted content using the new password. Simple, right? 😉&lt;/p&gt;

&lt;p&gt;Anyway, the interesting codes can be seen on the blog source:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/pallavagarwal07/pallavagarwal07.gitlab.io/tree/source/_plugins&quot;&gt;Plugins Dir&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/pallavagarwal07/pallavagarwal07.gitlab.io/blob/source/_plugins/gopherjs.rb&quot;&gt;Go to JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/pallavagarwal07/pallavagarwal07.gitlab.io/blob/source/_plugins/hooks.rb&quot;&gt;Decrypt and Encrypt again&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/pallavagarwal07/pallavagarwal07.gitlab.io/tree/source/_lib/encrypt&quot;&gt;Go files for encryption&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;If you have any queries, or want to report a bug/vulnerability in this
approach, I would be very thankful if you leave a comment below :)&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">Happy New Year everyone!</summary></entry><entry><title type="html">Automating HTTPS certs using Namesilo and Letsencrypt</title><link href="http://localhost:4000/2017/12/08/Automating-HTTPS-certs/" rel="alternate" type="text/html" title="Automating HTTPS certs using Namesilo and Letsencrypt" /><published>2017-12-08T00:00:00+00:00</published><updated>2017-12-08T00:00:00+00:00</updated><id>http://localhost:4000/2017/12/08/Automating-HTTPS-certs</id><content type="html" xml:base="http://localhost:4000/2017/12/08/Automating-HTTPS-certs/">&lt;h3&gt;TL;DR&lt;/h3&gt;

&lt;p&gt;I automated the procedure of obtaining and installing HTTPS certificates for
all my domains and subdomains using the APIs provided by Namesilo (my registrar),
GitLab (my host), and Certbot (certificate issuing package).&lt;/p&gt;

&lt;h3&gt;Long version&lt;/h3&gt;

&lt;p&gt;Not being on https is seriously bad for your website. Leaving out the actual
security issues of not using https, the &lt;a href=&quot;https://searchengineland.com/google-emails-warnings-webmasters-chrome-will-mark-http-pages-forms-not-secure-280907&quot;&gt;policy changes in Google
Chrome&lt;/a&gt;
also make a non-https website look bad to an end user. I shifted this blog to
https more than an year ago (May 2016) and since then I have been using
certificates generated by Letsencrypt for this blog.&lt;/p&gt;

&lt;p&gt;If you do not know about Letsencrypt, I suggest you go ahead and read about it
&lt;a href=&quot;https://letsencrypt.org/about/&quot;&gt;here&lt;/a&gt;. In short, it provides free trusted SSL
certificates for people to enable SSL on their websites. A certificate is valid
for 3 months, after which the owner must renew the certificate by providing
proof of domain ownership again.&lt;/p&gt;

&lt;h3&gt;Proving domain ownership&lt;/h3&gt;

&lt;p&gt;To prove that you have control over a domain name, you need to solve one of
multiple challenges:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Posting a specified file in a specified location on a web site (the HTTP-01
challenge)&lt;/li&gt;
&lt;li&gt;Offering a specified temporary certificate on a web site (the TLS-SNI-01
challenge)&lt;/li&gt;
&lt;li&gt;Posting a specified DNS record in the domain name system (the DNS-01
challenge)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Traditionally, I have always used either (1) or (3) manually to obtain my
certificates. However, as the number of domains/sub-domains for which I need
to generate these certificates increases, doing this manually for each one
starts to suck. A couple of days ago, I decided to automate the whole process
so that I don't have to think twice before using a sub-domain (no thinking - oh
no, not another one) or getting a new domain.&lt;/p&gt;

&lt;h3&gt;Choosing the correct challenge&lt;/h3&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;HTTP-01&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;HTTP-01 challenge would have been the easiest to automate. However, it
restricts the locations for which I can generate the certificate. Specifically,
since the HTTP-01 challenge requires showing a particular file at a specified
URL on that domain, it needs to be a server that's hosting a website. But what
if it isn't? For instance &lt;code&gt;alexa.pallav.xyz&lt;/code&gt; only hosts an instance of the
&lt;a href=&quot;https://github.com/stevenleeg/geemusic&quot;&gt;GeeMusic&lt;/a&gt; server. Since there are no
HTTP pages served, it can't participate in HTTP-01 challenge.&lt;/p&gt;

&lt;p&gt;Also, I tend to change the way my website is generated and/or hosted. Any
change would require corresponding changes to the automation script which is
unacceptable.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;TLS-SNI-01&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;This one has the same problem as the former challenge. Every server has a
different way of serving certificates. The script would need to be tuned for
each server. &lt;strong&gt;Any domain/subdomain currently not in use would not be included
for certificate generation.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;DNS-01&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;DNS-01 was the clear winner. DNS changes don't require any interaction with the
domain host, but rather with the registrar or the DNS provider. Since the
probability of me changing registrars is quite low, the automation script would
be able to generate certificates of all domains registered with Namesilo.&lt;/p&gt;

&lt;p&gt;This automatically also takes care of any subdomains I create of the existing
domain names, since they are also under the same registrar.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h3&gt;Automation!&lt;/h3&gt;

&lt;p&gt;So here's the steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Call certbot for all domains. Indicate preference for DNS-01 challenge.&lt;/li&gt;
&lt;li&gt;For each domain, use the Namesilo API to update the DNS record as indicated
by certbot.&lt;/li&gt;
&lt;li&gt;Stall the script for 15 minutes to let the DNS record update be published.&lt;/li&gt;
&lt;li&gt;Let certbot run the verification.&lt;/li&gt;
&lt;li&gt;Use the GitLab API to install the newly generated certificate into the pages
hosted by GitLab.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;strong&gt;Step 1: Calling certbot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have used certbot before, you'd know that by default it runs in an
interactive mode. Clearly, if we want to run it inside a script, interactive
mode would be &lt;em&gt;undesirable&lt;/em&gt;. Similarly, since the certificates need to be
installed on GitLab and not on local server, we need the &lt;code&gt;--manual&lt;/code&gt; and
&lt;code&gt;certonly&lt;/code&gt; modes. After some experimentation, I was able to come up with a
launch command that runs the certbot non-interactively, and without any
complications.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;certbot     --config-dir ${DIR}/gen/conf      \
            --work-dir ${DIR}/gen/work        \
            --logs-dir ${DIR}/gen/logs        \
            --agree-tos                       \
            -m pallavagarwal07@gmail.com      \
            -d pallav.xyz                     \
            -d www.pallav.xyz                 \
            -d alexa.pallav.xyz               \
            -d varstack.com                   \
            -d www.varstack.com               \
            --manual                          \
            --manual-public-ip-logging-ok     \
            --preferred-challenges dns        \
            --noninteractive                  \
            --manual-auth-hook ${DIR}/hook.sh \
            certonly
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first 3 lines just indicate the preference of where I'd like the
certificate and other artifcats to be generated. Most of the other flags are
rather self explanatory. Flags like &lt;code&gt;--agree-tos&lt;/code&gt; and
&lt;code&gt;--manual-public-ip-logging-ok&lt;/code&gt; just prevent the script from asking the user
for permissions. The use of most flags can be understood by running&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;certbot --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The flag of interest is &lt;code&gt;--manual-auth-hook&lt;/code&gt;. This flag specifies the
executable to be called for the completion of the challenge for each domain
name (in this case, the challenge is &lt;code&gt;DNS-01&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The challenge executable in my case can be found
&lt;a href=&quot;https://github.com/pallavagarwal07/NamesiloCert/blob/master/hook.sh&quot;&gt;here&lt;/a&gt;.
The executable gets in its environment, two important variables:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CERTBOT_DOMAIN:
domain for which challenge is running (eg. alexa.pallav.xyz)

CERTBOT_VALIDATION:
the value corresponding to the _acme-challenge TXT entry
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TXT is a type of DNS entry. Thus, if I have the environmental variables set as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CERTBOT_DOMAIN=abc.pallav.xyz
CERTBOT_VALIDATION=somerandomstring
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I need to add a TXT entry for &lt;code&gt;_acme-challenge.abc.pallav.xyz&lt;/code&gt; with the value
&lt;code&gt;somerandomstring&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Calling Namesilo API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.namesilo.com/api_reference.php&quot;&gt;Namesilo thankfully has a very complete RESTful
API&lt;/a&gt;. It took me a short while to
write a Go client that can interact with Namesilo via the API and add the
required DNS entries.
&lt;a href=&quot;https://github.com/pallavagarwal07/NamesiloCert/blob/master/action.go&quot;&gt;Here&lt;/a&gt;
is the relevant code (along with helper files in that directory).&lt;/p&gt;

&lt;p&gt;The executable called by Certbot is a wrapper around this client, and calls
this with the required arguments.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Stall 15 minutes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a bit hacky. The wrapper script checks if it is being called for the
last domain in the list. If so, it goes into a sleep for 15 minutes. This is
required because Namesilo publishes DNS changes every 15 (or 5 maybe?) minutes.
After 15 minutes, the script returns control to the certbot process.&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: Let certbot run the verification.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Almost done!&lt;/p&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5: Installation using GitLab API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At this point we have generated our certificates. The only thing needed to be
done is the installation of those certificates into existing websites, in this
case, the ones hosted by GitLab. Now, GitLab too has a very comprehensive set
of RESTful APIs. I specifically use the &lt;a href=&quot;https://docs.gitlab.com/ee/api/pages_domains.html&quot;&gt;Pages Domains
API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This was rather straightforward, except for one bug on which I was stuck was
quite some time before finally posting it on stackoverflow. Like always, I figured
out a workaround before anybody could post a solution, but the question is still a
good record of what the problem was, so I'll just link to it here in case anybody
has a similar issue: &lt;a href=&quot;https://stackoverflow.com/questions/47677846/&quot;&gt;GitLab Pages API 404 error for certain
projects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The installation to GitLab code can be viewed
&lt;a href=&quot;https://github.com/pallavagarwal07/NamesiloCert/blob/823fec691afe4929bb8079a73d348a244a553b93/gen_certs.sh#L38&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">TL;DR I automated the procedure of obtaining and installing HTTPS certificates for all my domains and subdomains using the APIs provided by Namesilo (my registrar), GitLab (my host), and Certbot (certificate issuing package).</summary></entry><entry><title type="html">Simplifying CI with Nix</title><link href="http://localhost:4000/2017/12/05/Simplifying-Travis-with-Nix/" rel="alternate" type="text/html" title="Simplifying CI with Nix" /><published>2017-12-05T00:00:00+00:00</published><updated>2017-12-05T00:00:00+00:00</updated><id>http://localhost:4000/2017/12/05/Simplifying-Travis-with-Nix</id><content type="html" xml:base="http://localhost:4000/2017/12/05/Simplifying-Travis-with-Nix/">&lt;p&gt;So, I know I haven't written anything in a while, and that's because the last
semester was my heaviest yet. But now since that has passed, I no longer have
excuses to not write more articles. So go ahead, read on.&lt;/p&gt;

&lt;p&gt;Before starting this article, if you do not know about Nix/NixOS, first go and
read up about it: &lt;a href=&quot;https://nixos.org/nixos/about.html&quot;&gt;NixOS&lt;/a&gt;. NixOS in my
opinion is the single most promising operating system ever written. Instead
of being FHS compliant, NixOS keeps all files under hashed directory names
under &lt;code&gt;/nix/store&lt;/code&gt; so that files from different packages never have any
collision. This allows the package manager to install multiple versions of the
same packages, along with deterministic and atomic builds and upgrades.&lt;/p&gt;

&lt;h3&gt;Throwback&lt;/h3&gt;

&lt;p&gt;Now, I started using Nix a long time ago (~Sep 2015), often switching between
Arch and Nix depending on my usage. Mostly I had to switch to Arch every time I
couldn't figure out how to configure something in Nix (the methodologies, like
the ideoligies are very different). About an year ago I switched to Nix
full-time (i.e. no other operating system on dual boot). The reason being that
I have learnt enough about the workings of Nix to make it do my day to day
bidding without much effort.&lt;/p&gt;

&lt;h3&gt;Precursor&lt;/h3&gt;

&lt;p&gt;Every time I write a package for something, the installation procedure for
Nix is quite different from other operating systems. While most operating
systems would just ask you to compile and put the binary in &lt;code&gt;/usr/bin&lt;/code&gt;, in
Nix you aren't allowed to change the global state of the OS. This means that
every package has to be accompanied by a config file that precisely lists all
dependencies and the build environment needed by the package. How the OS
provides that environment is none of our concern. If our package has a
dependency, I need to only write that in my package's config file, and even
without globally installing the package, my package would be able to build
against the dependencies as well as use them during runtime. It is like a
&lt;code&gt;virtualenv&lt;/code&gt; except that it can be for any package, written in any language(s)
and that has dependencies of any language(s). It's how &lt;code&gt;virtualenv&lt;/code&gt; would look
if it was 1000x smarter and more useful.&lt;/p&gt;

&lt;p&gt;Since it simplifies development so much, I write my project's config file
before even starting the project. When new dependencies or requirements emerge,
it is a simple matter to modify a couple of lines in the config file. The best
thing about this approach is that my packages are always testable, even if I
reinstall the whole OS, I know that to run that package, I only need to run a
shell with that config file. No more iteratively installing dependencies based
on error messages.&lt;/p&gt;

&lt;h3&gt;Weren't we supposed to talk about CI?&lt;/h3&gt;

&lt;p&gt;Yes! Sorry.. I was building up to it. One of the major advantages of Nix is
that Nix is a package manager that can be installed on other operating systems
as well. Thus an existing Arch or Ubuntu or ... OS can actually benefit from a
lot of this NIXey goodness by installing the Nix package manager. And very
recently, struggling with getting the dependencies &quot;just right&quot; on Travis, I
decided to exactly this.&lt;/p&gt;

&lt;h3&gt;Wait.. Travis?&lt;/h3&gt;

&lt;p&gt;(Skip this if you know about Travis CI)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Travis CI is a hosted, distributed continuous integration service used to
build and test projects hosted at GitHub. Travis CI automatically detects
when a commit has been made and pushed to a GitHub repository that is using
Travis CI, and each time this happens, it will try to build the project and
run tests. This includes commits to all branches, not just to the master
branch.
The point of this is that you can often discover very quickly if your commit
broke something, and fix it before it becomes a problem.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;And the problem was?&lt;/h3&gt;

&lt;p&gt;When writing a program, it is very easy to lose track of all its dependencies
that you installed to get the code working, or the libraries it links against
that are under a different name on your OS as compared to the OS running on the
CI. At some point, everybody finds themselves battling with the package manager
on the CI, iteratively running the tests again and again and fixing the next
error that is reported on failure of the build.&lt;/p&gt;

&lt;p&gt;I ran into this problem when I was trying to set up the CI for my blog's code.
Yes, the website you are reading - that's what I am talking about. Since the
final compiled product is a static website, I used to compile it on my PC and
upload the compiled files for hosting. On my PC, the dependency management was
just fine, because - you guessed it - I had written a Nix config file for it.
Even so it was very hard to get it right on Travis, since it was running Ubuntu
and my blog uses a rather lot of dependencies (jekyll, as well as python NLP
libs for the search).&lt;/p&gt;

&lt;h3&gt;Solution!&lt;/h3&gt;

&lt;p&gt;Then I realised that I don't need to take this trouble. Nix always builds
everything deterministically. Which means that if a build config file works
fine on my laptop, it would work fine on Travis too. And since it is possible
to install Nix on Ubuntu, I decided to see if it'd be able to use my existing
config file to build my code using Nix instead.&lt;/p&gt;

&lt;p&gt;The result was a small bunch of scripts that you can just curl directly from
any build that uses a &lt;code&gt;default.nix&lt;/code&gt; (Nix config file) for its builds and the
Travis build would first install Nix and then complete the build using the
Nix config file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/pallavagarwal07/NixCI&quot;&gt;GitHub link for NixCI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Example&lt;/h3&gt;

&lt;p&gt;The above link would also be a good example of how to use the Nix CI from a
project that uses Travis CI. Hint: look into the &lt;code&gt;.travis.yml&lt;/code&gt; file. Note that
you can directly curl the installation and configuration script from the above
repository directly into your CI job. The link below is a fine example of how
to do that.&lt;/p&gt;

&lt;p&gt;To view an example of using this with GitLab CI:
&lt;a href=&quot;https://gitlab.com/pallavagarwal07/pallavagarwal07.gitlab.io/blob/fa853cf54ec8c294e35f194feeb528d27295ae47/.gitlab-ci.yml&quot;&gt;Click Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note that when sourcing from TravisCI, the script to run is &lt;code&gt;install-nix.sh&lt;/code&gt;
but from GitLab CI, the script to run is &lt;code&gt;install-root.sh&lt;/code&gt;. The latter is a
wrapper around the former but assumes that the user running the script is root
and the wrapper (&lt;code&gt;install-root.sh&lt;/code&gt;) creates a non-root user with sudo
priviledges and runs the &lt;code&gt;install-nix.sh&lt;/code&gt; script as the newly created user.
This is not required in Travis since the default user in Travis is already a
non-root user with sudo priviledges.&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">So, I know I haven't written anything in a while, and that's because the last semester was my heaviest yet. But now since that has passed, I no longer have excuses to not write more articles. So go ahead, read on.</summary></entry><entry><title type="html">An intern’s views - End of Diary</title><link href="http://localhost:4000/2017/07/29/End-of-Diary/" rel="alternate" type="text/html" title="An intern's views - End of Diary" /><published>2017-07-29T00:00:00+00:00</published><updated>2017-07-29T00:00:00+00:00</updated><id>http://localhost:4000/2017/07/29/End-of-Diary</id><content type="html" xml:base="http://localhost:4000/2017/07/29/End-of-Diary/">&lt;p&gt;The series:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/07/How-I-got-here/&quot;&gt;An intern's views - How I got here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/06/07/A-month-end-at-Google/&quot;&gt;An intern's views - A month's end at Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/10/How-far-have-I-come-working-at-Google/&quot;&gt;An intern's views - How far have I come?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/29/End-of-Diary/&quot;&gt;An intern's views - End of diary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Before I start, I would like to point out that I'm writing this from Hong Kong,
sitting in front of Disneyland, waiting for it to open. Life is good.&lt;/p&gt;

&lt;p&gt;I'm not really sure what to write about. I've mostly written about my
experience as a Google Intern. I've written about the work I've done. I've
written about how I got here. Last few weeks have been all about wrapping up.
And since its pretty boring to write about wrap up, I've instead converted this
post into an FAQ about the full experience. Some of these may be specific to
IITK and my situation, so feel free to skip them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q. Google came to IITK. Why didn't you wait for it in campus placements?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This one goes first because I was asked this again and again by people, and not
even with this tone. The tone was usually &quot;You could've waited for Google, you
would've definitely gotten it.&quot;.&lt;/p&gt;

&lt;p&gt;So basically, most people assumed that the reason I didn't wait for Google was
because I was afraid that I wouldn't get Google, and I wouldn't have any
intern. I didn't wait for Google because it was Google India, and Google India
doesn't have any good teams working on systems. While Google India would still
be preferable over LinkedIn (which I sat and got in campus internship
placements), sitting for Google India would've made me ineligible to sit for
Google U.S., which was my target. Also, as a side benefit, Google U.S. pays a
lot more, which is always preferable ;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q. Everything considered, why do you think Google is the better place to intern?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's culture. Finance companies will always pay more, even for tech jobs. And I
understand that many people would prefer that. But for me, I don't want to wake
up on time everyday to go to office. I don't want to stick to some dress code,
I want to go to office in shorts, like I do in college. I don't want to be
restricted to my own department when working. I want to learn what other people
are doing, without the company firing me for talking to people on a project
that isn't mine.&lt;/p&gt;

&lt;p&gt;Google has an open codebase. In the sense that all code that drives Google and
its' projects, is in a single repository, that everyone has access to. Which
means that, even as an intern I had tremendous amount of knowledge one click
away. While working, I often read other papers (design documents) of things
Google was working on, and I was never disappointed. Google is fascinating from
the inside.&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">The series:</summary></entry><entry><title type="html">Mistakes are okay</title><link href="http://localhost:4000/2017/07/24/Mistakes-are-okay/" rel="alternate" type="text/html" title="Mistakes are okay" /><published>2017-07-24T00:00:00+00:00</published><updated>2017-07-24T00:00:00+00:00</updated><id>http://localhost:4000/2017/07/24/Mistakes-are-okay</id><content type="html" xml:base="http://localhost:4000/2017/07/24/Mistakes-are-okay/">&lt;p&gt;Hey.. Whoever is reading this.&lt;/p&gt;

&lt;p&gt;This article has been sitting in my mind for a week now, and I finally decided
to write it. So, a week ago, a guy messages me to ask some tips on GSoC. I like
that, it makes me happy to know that I can help someone. However, it was obvious
that the guy didn't have much confidence in himself.&lt;/p&gt;

&lt;p&gt;I guess that's fine. Anybody who has seen me during exams and interviews would
know how much I panic before anything important. But there is a key difference.
I never feel like I can't do something. I don't like it when people say they
don't have what it takes to do something.&lt;/p&gt;

&lt;p&gt;Anyway, the story goes something like this. I'm advising this guy, and it comes
up that he feels like he makes too many mistakes. Hmmm, alright. Then he goes on
to say &quot;It's all right for you, you don't make major mistakes.&quot;. Sigh.&lt;/p&gt;

&lt;p&gt;Wait, I know where the problem is! People (myself included) always write and
tell people about things they've been successful at. Nobody writes about things
they didn't achieve. Nobody blogs about the things they failed to do. The
mistakes they made. Let me rephrase. When you seek advice from a person who
achieved 'X', you ask how they achieved it. You never ask what Y, Z things they
tried and failed. This leads to a very strong &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Survivorship_bias&quot;&gt;survival
bias&lt;/a&gt;&quot;. And for the people on
the other end, it leads to imposter syndrome.&lt;/p&gt;

&lt;p&gt;There are plenty of things I could write about. There was the time when I
deleted my whole blog experimenting with git. Recently, I ended up breaking
around 30 targets in production, at Google, causing a flood of bug reports
being filed to my user id within an hour. There was the time when I was
explaining my algorithm to my host, and didn't realise that I was speaking in
Hindi instead of English (he obviously, not being Indian, did not understand a
word of it) and made a complete fool of myself on my 2nd week of internship.&lt;/p&gt;

&lt;p&gt;But all of these things don't get the same vibe of stupidity that I want you to
realise that anybody can have. So let's talk about how I &lt;em&gt;almost&lt;/em&gt; screwed up my
internship, and almost put everything at stake. A few weeks ago, I lived one of
the worst days of my life.&lt;/p&gt;

&lt;p&gt;I woke up and realised my bag was missing. You know.. the one with visa and
passport and office laptop and office badge. (A bit of info here. At the time
of writing this article, I'm in New York, U.S., on an internship in Google,
while I am from India).&lt;/p&gt;

&lt;p&gt;Now there are a couple of things of interest here. Why was my passport in a bag
and not in my room? Because I'm stupid enough not to realise that carrying a
passport everywhere, everyday, is not necessary when in US. :(&lt;/p&gt;

&lt;p&gt;Do you know what happens when you lose your passport? I do. Because I spent the
next hour trying to figure out what to do. Anyway, it's not pretty. You have to
go back to your country on a temporary identity, then get a new passport and
then a new visa (which takes time), and then you may be allowed to come back IF
you can get your work authorisation verified (and you have time left on the
original work authorization documents).&lt;/p&gt;

&lt;p&gt;So obviously, I did the most obvious thing that came to mind. I started
panicking. After a while when I had convinced myself that losing one internship
and summers is not the end of the world, I started retracing my steps.&lt;/p&gt;

&lt;p&gt;Then I remembered I had the dinner at restaurant. Hoping that that's where I'd
left it, I went to the restaurant. But it was obviously closed as it was 8:30
am. So I sent mail to my host explaining why I wouldn't come on time and
waited. It opened 4 hours later.&lt;/p&gt;

&lt;p&gt;Must've imagined every possible scenario in that time. Everything from getting
kicked out of Google to getting deported. Anyway, once the restaurant opened, I
went in. Well.. The first few employees I asked were a bit rude. I was not
willing to give up so easily, so I kept asking whoever I could find in that
restaurant. After a little while a man heard the word 'bag', and came inside,
and said he knew where my bag is. He went to the cash counter, and retrieved
the bag from a locked drawer underneath the counter. I have never been more
relieved in my life.&lt;/p&gt;

&lt;p&gt;The point of this article is for you to stop thinking that others don't make
mistakes. That others are capable of being silly at times. Stop comparing other
peoples (successes) with your (successes, failures). Please.&lt;/p&gt;

&lt;p&gt;If you think this article is worth re-telling, share it :)
&lt;br/&gt; &lt;br/&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">Hey.. Whoever is reading this.</summary></entry><entry><title type="html">An intern’s views - How far have I come?</title><link href="http://localhost:4000/2017/07/10/How-far-have-I-come-working-at-Google/" rel="alternate" type="text/html" title="An intern's views - How far have I come?" /><published>2017-07-10T00:00:00+00:00</published><updated>2017-07-10T00:00:00+00:00</updated><id>http://localhost:4000/2017/07/10/How-far-have-I-come-working-at-Google</id><content type="html" xml:base="http://localhost:4000/2017/07/10/How-far-have-I-come-working-at-Google/">&lt;p&gt;AKA, what the hell about work? I have gone on and on about getting here. The
things I found here. But I have still made no mention of what I do here. Well,
here it is. So sit back, and read on.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/07/How-I-got-here/&quot;&gt;An intern's views - How I got here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/06/07/A-month-end-at-Google/&quot;&gt;An intern's views - A month's end at Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/10/How-far-have-I-come-working-at-Google/&quot;&gt;An intern's views - How far have I come?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/29/End-of-Diary/&quot;&gt;An intern's views - End of diary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;In case you haven't read the last article, you might want to.&lt;/p&gt;

&lt;p&gt;So where were we? Oh yeah, end of orientation (week 1). So, after week 1,
interns actually start working in full force. Now, the command structure is
something like this - I'm an intern. I have a host who is responsible for
hosting my project. He is primary reviewer on all my code, and my main point of
contact in case of any problems. Apart from my host, I have a second reviewer,
who is basically the person who has worked on similar stuff before and is in
the best position to help me deploy my code.&lt;/p&gt;

&lt;p&gt;Above them is our manager, and then more managers above him (in a nutshell).&lt;/p&gt;

&lt;p&gt;So what do I work on? &lt;del&gt;Hmmm.. I am not sure if I'm allowed to say yet?&lt;/del&gt;
This blog article describes my project pretty well: &lt;a href=&quot;https://blog.bazel.build/2017/08/25/introducing-sandboxfs.html&quot;&gt;Introducing
Sandboxfs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyway, I am in the Blaze team. Blaze is the internal name for Bazel
(&lt;a href=&quot;https://bazel.build&quot;&gt;https://bazel.build&lt;/a&gt;). To understand what Blaze is, first let's jog your
memory. Which names do you recognize?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make (Makefile)&lt;/li&gt;
&lt;li&gt;Ant&lt;/li&gt;
&lt;li&gt;Maven&lt;/li&gt;
&lt;li&gt;CMake&lt;/li&gt;
&lt;li&gt;Gradle&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All the above mentioned are build tools, and they all work on a similar
concept. You have a build configuration, and they try to build the project by
minimizing the work done. For example, if only one file has changed, they'd try
not to build the whole project again, but just that one file. Now as projects
become complicated, these tools become inefficient, and slowly more and more
incompetent. Google has all their source code in one huge repository (really
really huge), and code can take hours to build on parallel running machine
clusters. These tools can neither handle such complexity, nor the functionality
required for such a thing.&lt;/p&gt;

&lt;p&gt;This is where Bazel (Blaze) comes in. Blaze is &lt;em&gt;the&lt;/em&gt; build tool used by every
project in Google. It is what builds tens of thousands of projects everyday.
Now, Bazel is the open source version of Blaze, which other people can use in
their projects, but is mostly used by other companies (like Dropbox), who have
such huge requirements.&lt;/p&gt;

&lt;p&gt;If you are in a CS related field, you would've heard the term &quot;correctness&quot;
thrown around a lot. Proof of correctness of algorithms? Correctness in multi
threaded systems? Anyway, the main aim for a build tool is to ensure that the
build output is always correct (deterministic). Thus, the changing
circumstances should not change the build. For example, if a project A does not
depend on project B, then whether or not you have B installed should not have
an effect on build of A.&lt;/p&gt;

&lt;p&gt;One important way to ensure correctness is to sandbox the compiler. This
basically means to remove anything that might affect the build, except for the
dependencies declared by the programmer. Now this can be quite slow to do for
1000s of parallel builds, having 10,000s of dependencies. The current approach
can take up to 300% extra time for a build with sandboxing enabled than
disabled for some projects with a lot of dependencies. My project is a
completely different (and hopefully fast) approach to solving this.&lt;/p&gt;

&lt;p&gt;Back to working at Google; how does the work feel? One word - challenging. I
take up problems quickly, I can code fast, I can even understand libraries,
APIs faster than people expect me too. But I was not prepared for this. I don't
think I'm the only one who felt this way. My friends, who are interning at
Google or even other big companies felt the same. Programming in a company is
not the same as programming projects as a hobby.&lt;/p&gt;

&lt;p&gt;What am I talking about? Code Reviews, Lints, Style Guides. Writing code for
Google is not the same as writing code for oneself. Your code needs to work,
but that is low priority (okay, not really). Anybody reading your code should
be able to understand what it does, and that's high priority. I'm not
complaining, I have learnt more about writing &quot;good&quot; code in the last two
months than I did in years coding by myself. However, I am going on this rant
because I want whoever is reading this, to realise that if you are in college
right now, you have a wonderful opportunity to learn to write &quot;good&quot; code.&lt;/p&gt;

&lt;p&gt;What are code reviews? Code reviews are comments on your code, asking you to
fix problems (that you didn't even think were present) using alternatives you
would've never come up with yourself. Frankly, the first time around, code
reviews feel something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/review.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For the record, I made that meme for memegen &lt;strong&gt;&lt;em&gt;after&lt;/em&gt;&lt;/strong&gt; I finally got my first
pull request (or change list) accepted. It got 850+ upvotes, so I'm pretty sure
I'm not the only one who felt this way.&lt;/p&gt;

&lt;p&gt;Hmmm... Memes should be standard way of getting a point across. Memegen is full
of memes about &quot;Intern's first pull request&quot;, because it is a standard scene.
Intern comes, confident, writes a bunch of code, sends it for review, and BAM!
40+ comments on the code. Been there, done that. My first pull request (~400
lines) had over 90 comments and was finally submitted after 2 weeks when I had
managed to please all the reviewers by fixing every problem.&lt;/p&gt;

&lt;p&gt;Why am I writing about all this? Do I still feel the pain? Well, yes, but a lot
less than I originally did. After the code reviews, the code actually does look
a lot better. It also gives a sense of inferiority, that takes time getting
used to. At my college, there are a total of 2 people who can make me feel
inferior (in programming). At Google, every second employee manages to do it
with ease. We were told in our orientation that almost 70% of the Googlers have
felt that they don't belong here due to inferiority complex at some point in
their lives. But then a Googler comes along and asks for my help in area he
doesn't have any experience in, and the feeling goes away. These people aren't
all superior, they have just been working among the best too long.&lt;/p&gt;

&lt;p&gt;Best part of working at Google? The Googlers. Not only are the people here
brilliant at what they do, I have actually met some of the most down to Earth
people here.  And the benefit of working with the best people? I have a doubt
in Go; the Go team sits 6 rows from my desk. I need help implementing
something? I bet at least 3 people in the 50 step radius have done it before.
Can't remember the name of that one spaceship from Star Trek? I'm pretty sure 1
out of 5 people here know that too. I don't even need to Google my doubts that
often because somebody can usually clear them up (yeah, I can see the irony).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I know most of you don't care about how my project is going, but I'm going to put
it here anyway :P It's going well, and I had a fairly nice mid-term review. I'm
currently pushing hard to get the project released as open source (lots of
legal issues to solve in the way). Finger crossed :D&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, any regrets? Yes, from back at college. I really wish somebody had told me
about all this. Told me that the programming as I know it, isn't exactly how
it's done in real life. I wish I had had someone read all my codes, just to see
if they can understand it. I wish I had an expert nit-picking on my codes just
so having that now wouldn't be so surprising.&lt;/p&gt;

&lt;p&gt;Next steps? I like to help out others, so let's hope I can help a few people
avoid this shock. For now, mandatory code reviews on Programming Club IITK
repositories, adding test suites and continuous integration to important
projects and planning lectures on just these topics.
&lt;br/&gt; &lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Doubt? Question? Suggestion? I think the comment panel below works :)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Next in series: &lt;a href=&quot;/2017/07/29/End-of-Diary/&quot;&gt;An intern's views - End of diary&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">AKA, what the hell about work? I have gone on and on about getting here. The things I found here. But I have still made no mention of what I do here. Well, here it is. So sit back, and read on.</summary></entry><entry><title type="html">An intern’s views - A month’s end at Google</title><link href="http://localhost:4000/2017/06/07/A-month-end-at-Google/" rel="alternate" type="text/html" title="An intern's views - A month's end at Google" /><published>2017-06-07T00:00:00+00:00</published><updated>2017-06-07T00:00:00+00:00</updated><id>http://localhost:4000/2017/06/07/A-month-end-at-Google</id><content type="html" xml:base="http://localhost:4000/2017/06/07/A-month-end-at-Google/">&lt;p&gt;The series:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/07/How-I-got-here/&quot;&gt;An intern's views - How I got here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/06/07/A-month-end-at-Google/&quot;&gt;An intern's views - A month's end at Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/10/How-far-have-I-come-working-at-Google/&quot;&gt;An intern's views - How far have I come?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/29/End-of-Diary/&quot;&gt;An intern's views - End of diary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Okay, okay.. I know this article is a bit late (and I've backdated it a bit),
but I've been really busy. As it turns out, work at Google isn't all that easy
(...did I think it would be?). But I'll get to that later 😉.&lt;/p&gt;

&lt;p&gt;So let's walk through my first few days in the office. So, on my first day in
office, I actually got late. Imagine that...&lt;/p&gt;

&lt;p&gt;Anyway, the first week is orientation. I had to go to one of three buildings
in which Google resides. It wasn't too hard to find, and when I got there, I
realised that reaching late wasn't that bad anyway, since I had to wait in line
to be badged as an intern. Also, I wasn't the only one who had had trouble
finding their way around the city.&lt;/p&gt;

&lt;p&gt;All interns join on a Monday, which means that there is an orientation every
week, and my batch was one of the earliest. There weren't a ton of interns
joining that week. However, in U.S. interns have orientation in one of the two
biggest offices: Mountain View for all west coast offices, and New York for all
east coast offices. So we had interns from many other offices as well
(Waterloo, for instance).&lt;/p&gt;

&lt;p&gt;We had our I-9 documents checked, and proceeded to the orientation room. It was
a presentation, where they showed us some of the things that we needed to know.
Basic stuff. We got a t-shirt, a bag, our work laptops (to be returned), and
those infamous funky caps with a propeller on them. Basically, after my first day,
I looked something like this:&lt;/p&gt;

&lt;div style=&quot;display: inline-block; width:29%; vertical-align: top&quot;&gt;
&lt;img src=&quot;/img/intern-cap.jpg&quot; style=&quot;max-width:100%&quot; /&gt;
&lt;/div&gt;


&lt;div style=&quot;display: inline-block; width:69%;&quot;&gt;
If you're wondering whether we are supposed to ever wear those caps, then yes,
we were supposed to wear them during our first TGIF (which ironically are on
Thursdays). &lt;br /&gt;&lt;br /&gt;
After getting to know some of the rules about Google, and making some new
friends, we continued on with the rest of the orientation. That is, for the
whole first week, we spent our time sitting in lectures about some technologies
used by Google, work practices, ethics etc. &lt;br/&gt;&lt;br/&gt;
The work actually doesn't start in first week, since most interns are actually
not in their own office, so the first week is usually all about going home
early, exploring the office, meeting other Googlers, and exploring more of
Google on its intranet.
&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I think the thing I love most about Google is how open the culture is. Google
has all their code in a single (huge) repository, and even interns had access
to all the source code. This includes most of Google's projects, and their
systems. This is also very opposed to a company like Apple, where people in one
department aren't even allowed to talk to people from other departments about
their work. I know some people prefer the secrecy/privacy model, so I'm not
praising one over the other, it is just my own preference.&lt;/p&gt;

&lt;p&gt;I guess some of you may have seen the movie &lt;a href=&quot;//www.imdb.com/title/tt2234155/&quot;&gt;The Internship
(2013)&lt;/a&gt;, and would be wondering: &lt;strong&gt;what about
all the things they showed in the movie? Free food? Quidditch matches?  Coding
on transparent boards? Competing against other interns? Restrictions on
dating?? Is that all true?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hmmm... this is going to take a while.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Free Food&lt;/strong&gt; - Yes, this one is completely true. Google has two kinds of food
outlets; micro kitchens (MKs) and cafes. Micro Kitchens have fillers: fruits,
eggs, milk, soft drinks, energy drinks, coffee machines, and even the big
barista machine to make your own coffee if you don't trust the automatic
machine to do it right. MKs are open 24/7 and usually fully stocked. There's
around 2 or 3 MKs on every floor in Google. The rule of thumb is, no matter
where your desk is, the food wouldn't be more than 30 second walk away.  BUT!!!
Cafes is where Google shines even more. Cafes are for proper meals: breakfast,
lunch AND dinner. Cafes open on weekdays (not weekends), but the food is
amazing (.. did I mention free?). There are a lot of cafes, and each has their
own speciality (some excel at desserts, some at breakfasts); and they have
different opening/closing times, so usually you can find at least some cafe open
during the work hours. Just Google &quot;google food&quot; to get a look at the variety
(images aren't even exaggerated).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quidditch matches&lt;/strong&gt; - Unfortunately I haven't seen one happen. Google does
keep buying tickets to stuff though. I got to go to a Yankees game last
weekend, with best seats, and... you guessed it, all you can eat hotdogs and
drinks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding on transparent boards&lt;/strong&gt; - Okay, so this one is tricky. I have a work
desktop, where I prefer to code, so I usually don't use the boards. But I've
seen people discussing stuff on whiteboards. Managers often have cabins with
glass walls, and I've seen them writing on walls, so I'll have to say yes to
this one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Competing against other interns&lt;/strong&gt; - NO. Google has separate projects for
different interns, and they are not supposed to compete against each other.
Some projects may have more than a single intern, in which case they'd
collaborate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Restrictions on dating&lt;/strong&gt; - I'm not even sure why I put this here. Maybe
because I was pretty surprised about this in the actual movie. We had to take
some ethics classes in the beginning of the intern, and yes, they did mention
that dating a person who is your immediate manager is inappropriate (and a
request for transfer is recommended, I think), but anything else is fine (yes,
this was part of the online mandatory ethics course).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What about other things? Surely there are more?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hmmm... this is going to take even longer than I originally thought.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game rooms&lt;/strong&gt; - We have 2 game rooms in our NYC office. These game rooms have
arcade games, table tennis tables, air hockey, video games (smash anyone?), pool,
tons of board games, foosball tables. I could go on (I'm not joking), but I think
you get the idea. Apart from this, we have a room dedicated to wall climbing too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Naps&lt;/strong&gt; - The whole office is filled with places to sleep. From nap pods to beds,
we have it all. It is also pretty convenient and practical since a nap during work
hours can really help to reset the mind. How convenient you ask? Look for yourself.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/sleep1.jpg&quot; width=&quot;49%&quot;&gt;&lt;img src=&quot;/img/sleep2.jpg&quot; width=&quot;49%&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tech stops&lt;/strong&gt; - If you've been to nice offices, they always have these
stationary racks, filled with all stationary you'd ever need. Like papers,
copies, pens, refills, clips, whiteners, etc. This is like that, but it is not
stationary. These are electronic accessories you'd ever need in your work.
Power converters, dongles, USB cables, chargers, privacy screens, mouse,
keyboards, mouse pads... You get the idea.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Massages&lt;/strong&gt; - Googlers (and interns) get some free professional massages an
year, and I haven't been to one yet. I have a booking coming up, and maybe I'll
elaborate later (yes, there are multiple massage rooms in the office).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Massage chairs&lt;/strong&gt; - Poor man's massage? I guess these chairs aren't cheap to
buy. But they are spread around the office so you keep running into them from
time to time. Unlike the professional massage, these are free to use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gyms&lt;/strong&gt; - Yes, the office has more than one gym. Whether you are looking to
lift weights, or you are looking for a spin class, you can do it in the office
itself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Classes&lt;/strong&gt; - Google has classes for a variety of things. While many of the
classes are based on developing technical skills, or professional skills, there
are a number of classes on seemingly random topics. I took a cooking class,
where I baked a set of delicious cookies (which I got to take home).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Memegen&lt;/strong&gt; - Of course, how can one work on a computer without periodically
looking at memes, right? Lo and behold! Google even has its own meme website
internally. Your best source of fun and fake news about everything Google!&lt;/p&gt;

&lt;h2&gt;Verdict&lt;/h2&gt;

&lt;p&gt;I really think that Google goes well and beyond to get its employees happy. I
didn't mention a lot of other things like people's pet projects that line up the
walls, the amazing chefs, and I really would elaborate more on the &quot;working&quot;
part of the intern later.&lt;/p&gt;

&lt;p&gt;But till then, if you're reading this, leave a comment below :)&lt;/p&gt;

&lt;p&gt;Next in series: &lt;a href=&quot;/2017/07/10/How-far-have-I-come-working-at-Google/&quot;&gt;An intern's views - How far have I
come?&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">The series:</summary></entry><entry><title type="html">An intern’s views - How I got here</title><link href="http://localhost:4000/2017/05/07/How-I-got-here/" rel="alternate" type="text/html" title="An intern's views - How I got here" /><published>2017-05-07T00:00:00+00:00</published><updated>2017-05-07T00:00:00+00:00</updated><id>http://localhost:4000/2017/05/07/How-I-got-here</id><content type="html" xml:base="http://localhost:4000/2017/05/07/How-I-got-here/">&lt;p&gt;AKA, how I got an internship in Google. In case you were wondering why the
actual title is so obscure, it is because I want this article to be mostly
linked by the rest of the (monthly) articles in this series (I'll update the
links as I write them)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;/2017/05/07/How-I-got-here/&quot;&gt;An intern's views - How I got here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/06/07/A-month-end-at-Google/&quot;&gt;An intern's views - A month's end at Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/10/How-far-have-I-come-working-at-Google/&quot;&gt;An intern's views - How far have I come?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2017/07/29/End-of-Diary/&quot;&gt;An intern's views - End of diary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So, for those who know me, you'd know that getting into Google had been my
&quot;dream&quot; for a long time. And by long, I mean like when I was in class 8th/9th,
and I barely knew what programming meant. I used to look at tech companies and
read an article about how good the Google offices are, and the thought of me
working there just stuck. Let's go through the things I think are important.&lt;/p&gt;

&lt;h3&gt;A Fair Resume&lt;/h3&gt;

&lt;p&gt;I originally wrote &quot;A good Resume&quot;, but frankly, I have seen people with not
a lot of experience get into Google, so I'm revising it to say &quot;Fair&quot;.&lt;/p&gt;

&lt;p&gt;I don't think this needs to be explained much. If you are from a good college,
have a fair CPI, it should be enough to get you an interview. If you don't,
you'd need some good projects up your sleeve, or good performance in programming
competitions. They don't expect you to be great, because contrary to our belief,
undergrads aren't expected to know everything in the whole universe.&lt;/p&gt;

&lt;p&gt;One thing I would like to stress though is not to pile up your resume with weak
points just to make it longer. If you are a B.Tech. student, a good resume
would be around 1 page, unless you have done tons of projects. Truthfully, most
resumes that I've seen students make, are pretty long, and while its nice that
you are proud of a lot of things you did, do you really think that a Google
recruiter would give any weightage to the fact that you won the blindfold
Rubik's cube national competition?&lt;/p&gt;

&lt;p&gt;Your Resume needs to be made differently for every company to apply to, and I
would suggest that you keep only the most important points on your Resume if
you apply to a Tech company like Google.&lt;/p&gt;

&lt;p&gt;For reference, &lt;a href=&quot;/res/resume.pdf&quot;&gt;here&lt;/a&gt; is a snapshot of the Resume I submitted
to Google - Short, Sleek and to the point.&lt;/p&gt;

&lt;h3&gt;Application Procedure&lt;/h3&gt;

&lt;p&gt;With fear of stating the obvious, to get into Google, you need to apply to
Google.  I mean really?&lt;/p&gt;

&lt;p&gt;Take my college for example. We have a placement cell in which students
register for campus placements. Now, if you sit for campus placements,
accepting an outside offer causes you to be labelled a &quot;defaulter&quot;.  What this
means for you is that you are allowed to sit for only 2 companies in campus
placements in the first week of next year.&lt;/p&gt;

&lt;p&gt;This is one of the &lt;em&gt;only&lt;/em&gt; things I don't like about my college. Look at this
from a game theoretic perspective. Let's follow a person's thought process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If I get the placement penalty, I'll get to sit for only two companies in my
final year.&lt;/li&gt;
&lt;li&gt;If those two companies don't select me, I'll be jobless.&lt;/li&gt;
&lt;li&gt;I don't want to be jobless.&lt;/li&gt;
&lt;li&gt;I can't take penalty.&lt;/li&gt;
&lt;li&gt;I have two choices, either only apply for campus placements, or only apply
outside.&lt;/li&gt;
&lt;li&gt;There's a higher chance to get a job via campus placements.&lt;/li&gt;
&lt;li&gt;I can't sit for outside placements.&lt;/li&gt;
&lt;li&gt;I won't apply to Google.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Unfortunately, I saw tens of people follow this thought process. None of them
even tried to apply to Google or Facebook or Amazon or any of the amazing
companies that didn't visit our college.&lt;/p&gt;

&lt;p&gt;There's nothing wrong with the above thought process, but if you would allow
me, I'd want you to ask yourself a couple of questions.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you get selected by Google, do you really think those 2 companies would
reject you?&lt;/li&gt;
&lt;li&gt;If you can get selected in Google, can't you similarly apply off-campus next
year as well?&lt;/li&gt;
&lt;li&gt;If you get selected in Google, would you really not go just because of a
penalty?&lt;/li&gt;
&lt;li&gt;If (3) was yes, you'd actually get to reject Google! Wouldn't that boost
your morale?&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The truth is, people don't apply because they are lazy. Campus placements are
easy, they are less scary and completely inside our comfort zone. Nobody likes
getting rejected, and to apply to a company that they think is beyond them,
when they already have an acceptance, is useless effort. &lt;em&gt;Sigh&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;They are somewhat right. Getting rejected is no fun. &lt;em&gt;Hell, I got rejected by
Facebook after some pretty good interviews&lt;/em&gt;, and the only suggestion I got from
my recruiter was &quot;definitely encourage you to communicate more effectively
during an interview&quot;. It will take me some time to work on that...&lt;/p&gt;

&lt;p&gt;Now that I've completely lost your attention, let's get to how you can actually
apply to Google. There are primarily two ways.&lt;/p&gt;

&lt;p&gt;The first is to apply online through Google's portal. If you are a first or
second year undergrad, you can apply for an Engineering Practicum Intern
(&lt;del&gt;which I didn't know existed&lt;/del&gt; as pointed out by &lt;em&gt;Bhavishya&lt;/em&gt; in comments,
apparently only for students from North America :/ ), and if you are third year
or above, you can apply for a Software Engineering Intern. You can view the
exact details on &lt;a href=&quot;https://careers.google.com&quot;&gt;https://careers.google.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The second is to apply through a referral.&lt;/p&gt;

&lt;p&gt;The catch is, when you apply through the online portal, there is some chance
that your resume would not pass the automated screening. While Google does a
good job of selecting good resumes, there still remains a possibility that your
resume will never be seen by a real person. If your resume is not machine
readable for example, this would dump any chance of your getting selected (or
even getting shortlisted).&lt;/p&gt;

&lt;p&gt;Applying through a referral ensures that your resume will be seen by a real
person. Sounds like partiality? Well, yeah, sort of. The fact is, successful
referral incentives mean that the Googler referring you would actually ensure
that you are a good candidate before forwarding your resume. This is like a
spam protection, and will prevent resumes filled with singing and table tennis
achievements from reaching a recruiter.&lt;/p&gt;

&lt;p&gt;Now, for my friends at IIT Kanpur, I would like to tell you that you have
absolutely brilliant Alumnus with a lot of them working at Google, Facebook and
all the other top companies and it would be very easy for you to take the
second procedure above. Consider yourself very lucky.&lt;/p&gt;

&lt;p&gt;In my case, I didn't take a referral from an Alumni, but rather from Google
Summer of Code.  I have blogged about GSoC before and so feel free to read
about it more. Basically, on successful completion of a project, GSoC provides
you with a one time Google Referral that you can &quot;redeem&quot; any time in the future
for any position you wish. Since I was interested in the internship, I took the
referral and applied.&lt;/p&gt;

&lt;p&gt;So you apply, and wait.&lt;/p&gt;

&lt;p&gt;Until someone from Google either mails you, or calls you.&lt;/p&gt;

&lt;p&gt;Oh shit, oh shit, oh shit!! I got a call! Now what?&lt;/p&gt;

&lt;p&gt;Dance. I mean it. You have crossed the most difficult part. Now the rest of the
process is easy to follow, because its pretty straightforward. You schedule the
interviews with your recruiter, and the person calls you for the interview at
the exact schedule time.  You try to answer the questions and code the problems
the best you can, and wait for the next call/email. If you get through all
interviews, Congrats!&lt;/p&gt;

&lt;p&gt;This is also the point when any favoritism ends. It doesn't matter how you
applied, who you are, where you are from, how your resume was. After this
point, you will be judged solely on your performance in the interviews.&lt;/p&gt;

&lt;h3&gt;Timeline&lt;/h3&gt;

&lt;p&gt;So you can get articles like these anywhere. Why read mine? Because I like to
include personal experience, and I wish more people did. It helps a lot to know
what to expect at each step of the process. So let's go through the timeline -
or rather how much I was made to wait for every step of the road.&lt;/p&gt;

&lt;table class=&quot;tg table&quot; style=&quot;width:200%; line-height:2em&quot;&gt;
&lt;tr&gt;
&lt;th class=&quot;tg-031e&quot;&gt;Date&lt;/th&gt;
&lt;th class=&quot;tg-031e&quot;&gt;Event&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;23rd Sep&lt;/th&gt;
&lt;td class=&quot;tg-031e&quot;&gt;I mailed GSoC support asking for a referral&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;26th Sep&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;GSoC support confirmed that they had received my
request&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;11th Oct&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;I got a mail from Google recruiter about scheduling my
interviews&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;17th Oct&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;They confirmed the date of 26th October for two, one hour,
interviews&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-031e&quot;&gt;26th Oct&lt;/td&gt;
&lt;td class=&quot;tg-031e&quot;&gt;
Two interviews, each lasting for about 40 minutes + 10 minutes random talk.
&lt;br/&gt;
The interviews were over the phone, with laptop for coding online. &lt;br/&gt;
Learnt &lt;strong&gt;never to ask for interview over phone&lt;/strong&gt;.  &lt;br/&gt;
The voice was choppy, and combined with the interviewer's accent, I couldn't
understand anything. Went OK, not too good.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;2nd Nov&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;They asked to schedule one more interview - I requested an
interview over Hangouts instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;7th Nov&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Next interview was scheduled for 17th November&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;17th Nov&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Interview on Hangouts. Voice was clear, and interview went
much better.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;6th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;They confirmed that they are moving forward to the project
matching (I had 6 weeks to get selected for a project)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;7th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Recruiter called and explained the next steps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;8th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;I had to fill a form on my interests and strengths to be
matched to a team with similar work and interests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;13th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;&lt;i&gt;I receive rejection mail from Facebook. I cry.&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;14th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;Back to Google: Recruiter informs me of a potential project
host who wants to interview me! &lt;br/&gt;
Interview scheduled for 15th December (EST) or 16th Dec (IST)!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;16th Dec&lt;/td&gt;
&lt;td class=&quot;tg-yw4l&quot;&gt;
12:15 AM - Interview for about 30 min. I loved the project
and talked enthusiastically &lt;br/&gt;
4:04 AM - &lt;i&gt;Recruiter mails me to tell that the host would love to work with
me 😲&lt;/i&gt; &lt;br/&gt;
4:08 AM - I confirm that I would like to work in the project as well.&lt;br/&gt;
4:15 AM - Recruiter replies with steps to complete offer acceptance&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;


&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3&gt;Few random points about the interview&lt;/h3&gt;

&lt;p&gt;I had to give three technical interviews, and one project interview. This would
be different for different people.  Usually, they start with two technical
interviews, and if they are not sure, they take one more. Once the technical
interviews are done, one of two things can happen - Either you get an offer
first, and then you sit for project interviews (with much less pressure, since
it is no longer deciding your fate), or as in my case, you'd be asked to sit
for project interviews, and you'd get an offer IF you get selected in a project
within 6 weeks.&lt;/p&gt;

&lt;p&gt;For me, the project interviews were easier, because I experiment
a lot with random tech and software, however, for many people it does take 6
weeks and it is possible for you to not get a project at all. All I can say is
that gaining knowledge beyond your college books would help a lot.&lt;/p&gt;

&lt;p&gt;Contrary to popular belief, the interviews are NOT tough. The questions asked in
my technical interview were the sort of questions you would expect on the mid term
exam of Algorithms and Data Structures. They focus on your ability to code the solution
you propose, and how efficient and clean your solution is.&lt;/p&gt;

&lt;p&gt;During the project matching phase, telling your recruiter about your strengths and
interests would help as he/she would be able to match you with relevant teams more
quickly AND you would be able to get a team you'd enjoy working in (win-win).&lt;/p&gt;

&lt;p&gt;This is all I can remember about my experience for now. I may update this
article with more points as I remember them. I know the whole article has been
unstructured and jumpy, and its mostly because I waited too long to write this
article and now &quot;fragmented&quot; is exactly how I would describe my memory of the
experience. If you have any specific questions, ping me on Facebook. You'll
find the contact details on the &quot;About Me&quot; page on top.&lt;/p&gt;

&lt;p&gt;I'd only leave you with one thought. Do you really think you would regret the
experience even if you tried and failed?&lt;/p&gt;

&lt;p&gt;Next in the series: &lt;a href=&quot;/2017/06/07/A-month-end-at-Google/&quot;&gt;An intern's views - A month's end at
Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">AKA, how I got an internship in Google. In case you were wondering why the actual title is so obscure, it is because I want this article to be mostly linked by the rest of the (monthly) articles in this series (I'll update the links as I write them)</summary></entry><entry><title type="html">YourHonour: A k8s based distributed programming judge</title><link href="http://localhost:4000/2016/09/26/YourHonour-k8s-programming-judge/" rel="alternate" type="text/html" title="YourHonour: A k8s based distributed programming judge" /><published>2016-09-26T00:00:00+00:00</published><updated>2016-09-26T00:00:00+00:00</updated><id>http://localhost:4000/2016/09/26/YourHonour-k8s-programming-judge</id><content type="html" xml:base="http://localhost:4000/2016/09/26/YourHonour-k8s-programming-judge/">&lt;p&gt;So, this is something I have been working on recently for some time. The
project's name is YourHonour, and is is a Kubernetes(k8s) based Online Judge for
organising programming competitions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;YourHonour&lt;/strong&gt; came into being because the Open Source solutions already present
either do not fit all the criteria, or are just too hard to setup. The ones
that are easy to set up, as well as provide complete functionality are either
paid, or non-free.&lt;/p&gt;

&lt;p&gt;Anyway, I decided to build my own judge. Hell, how hard can it be? As it turns
out, creating a judge isn't as easy as I initially thought. There are way too
many things that can go wrong at any given time, most of the problems stemming
from the fact that the judge is supposed to run arbitrary code from the user on
the server, and make sure that it can't do anything malicious.&lt;/p&gt;

&lt;p&gt;Lastly, the judge should properly utilize resources from the cluster or machine
on which it is running, and properly give the resources to each program. It should
schedule the tasks properly, and kill them after a desired time. When listed, these
look something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run Isolated code&lt;/li&gt;
&lt;li&gt;No internet access to executable&lt;/li&gt;
&lt;li&gt;Kill after desired time&lt;/li&gt;
&lt;li&gt;Possibility to schedule on a cluster of computers/VMs&lt;/li&gt;
&lt;li&gt;Limit resources, distribute resources&lt;/li&gt;
&lt;li&gt;Handle exit status/signal of the user's code&lt;/li&gt;
&lt;li&gt;Preventing malicious behaviour&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;strong&gt;Let's tackle these one by one:&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Run isolated code&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The first thing that comes to mind when talking about isolation is a container.
That's pretty much it. That is probably the most sensible way to do it. In my
implementation, &lt;strong&gt;I use docker containers to run the user's code&lt;/strong&gt;. This way,
the container is isolated, and the code inside can't get access to any of my
files.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Kill after desired time&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Killing a process after desired time is important in a process because we need
to catch any kind of TimeLimit errors too. To do this, we need to keep a track
of the running process somehow. Usual way to do this is to have the process as
a child of our own process. Then the parent would be able to wait on the child
as well as kill it if need be. We will later see that just killing the spawned
process may not be enough.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Scheduling on cluster&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Since I went with docker to isolate the codes, the obvious choice for container
orchestration was the brilliant Kubernetes. The only problem - terrible
documentation. Half of their links in the docs keep breaking. But that is not
my concern. Usually a google search can be used to find non-404 pages.
Kubernetes can be used to schedule the containers with both memory and CPU
limits, as well as is pretty easy to setup (especially the docker-multinode
method).&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt; Limit and distribute resources&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Kubernetes provides configuration for this, and thus isn't a concern.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Exit/Signal status of child&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;As mentioned before, if the process is run as a child of our process, the
parent can listen to the events of the child, and find out any data needed
about the child.  This is implemented by having the parent call the fork call,
rewrite the stdout and stdin file descriptors, change user permissions and
execv the child process. Then the parent calls wait on the child, with a wakeup
alarm signal registered on the kernel.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Restrict internet access in container&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;I didn't find a very elegant solution to this. The containers which run without
&lt;code&gt;--privileged&lt;/code&gt; flag, &lt;strong&gt;don't have any way to turn off internet access from
inside the container&lt;/strong&gt;. And the internet can't be turned off before the
continer is launched because the container uses the network to fetch the
input/output files from local machines on cluster.&lt;/p&gt;

&lt;p&gt;On the other hand, adding the &lt;code&gt;--privileged&lt;/code&gt; flag gives the container access to
my devices, including my hard drive, which a malicious code could use to
potentially mount and gain access to my system. What I ended up doing was a
compromise between the two. I run the docker with &lt;code&gt;--privileged&lt;/code&gt; flag, but
before the executable is called, the &lt;code&gt;wrapper&lt;/code&gt; (or the &quot;parent&quot;) sets its UID
to an unprivileged user. Before doing so, the parent turns off the internet in
the container. Hope is that there is no way for the unprivileged user to turn
its internet connection back on (most probably true), however I still feel
uncomfortable using the &lt;code&gt;--privileged&lt;/code&gt; flag.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Prevent malicious behaviour&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This one is probably the most involved since we don't know what is meant by
&lt;em&gt;malicious&lt;/em&gt;. We have already stopped it from accessing internet, and our files,
drives and devices are safe. We have also tried our best to stop it from using
too many resources by limit container resources. So now what?&lt;/p&gt;

&lt;p&gt;Unfortunately, it is not easy to see what is missing. So I had some seniors in
security look over the program and test it for vulnerabilities. They found two
major problems (till now):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DoS attacks crush the server very easily:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apparently nodejs server doesn't have protection against DoS attacks.
&lt;em&gt;&lt;strong&gt;Sigh&lt;/strong&gt;&lt;/em&gt;. I didn't want to add a proxy gateway just to filter out DoS
attacks, so for now I have patched the server with a temporary solution. If
the server detects multiple consecutive requests (too many), it adds an
iptable rule to drop connections from that IP. This isn't perfect, but it
works. The server recovers from the attack in a few seconds, and the source
is blocked from making any requests for some time (configurable).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fork bombs in source code:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Even though the resources for the container are limited, a fork bomb increases
the number of processes a lot faster than the used up memory. This completely
clutters up the ready queue and prevents the parent from being scheduled. In
worst cases (and the behaviour is unpredictable), the docker container ends up
crashing the host node (i.e.  computer or VM) as well. While the ideal solution
would be to restrict the number of allowed processes, but I couldn't find the
correct way to do this in docker.  As an alternative, &lt;strong&gt;I increase the child's
niceness value&lt;/strong&gt; making it less important than the parent in the scheduling
algorithm. The &lt;strong&gt;parent sends the kill signal to ALL processes it is allowed to
send to&lt;/strong&gt;, and hence kills all descendants of the malicious process as well.
This seems to work well, and I haven't had much problem since.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">So, this is something I have been working on recently for some time. The project's name is YourHonour, and is is a Kubernetes(k8s) based Online Judge for organising programming competitions.</summary></entry><entry><title type="html">Preparation for Google Summer of Code</title><link href="http://localhost:4000/2016/08/23/Preparing-for-Google-summer-of-code/" rel="alternate" type="text/html" title="Preparation for Google Summer of Code" /><published>2016-08-23T00:00:00+00:00</published><updated>2016-08-23T00:00:00+00:00</updated><id>http://localhost:4000/2016/08/23/Preparing-for-Google-summer-of-code</id><content type="html" xml:base="http://localhost:4000/2016/08/23/Preparing-for-Google-summer-of-code/">&lt;p&gt;&lt;strong&gt;Preface:&lt;/strong&gt; I have been selected for Google Summer of Code ’16 under Gentoo
Organization.&lt;/p&gt;

&lt;p&gt;Firstly, I would suggest that you start now. Since I do not know anything about
your background, I will start at the beginning. Feel free to jump to the
relevant point in the process. But DO NOT skip anything as irrelevant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The basics:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To start, first you need the right tools.&lt;/p&gt;

&lt;p&gt;Learn (read “master”) at least one VCS (Version Control System). Since git is
the most common and the most popular, I recommend you start with that, however
knowing what svn and mercurial are won’t hurt. Start committing EVERYTHING you
code online. It doesn’t matter if your code sucks, you will improve. But even
the stupidest things you code need to be online.&lt;/p&gt;

&lt;p&gt;Make your own github repositories, play around. You wouldn’t believe how much
you can learn just while playing with different ideas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The essential:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Needless to say, shift to open source. Get rid of windows, install Linux, start
befriending your terminal. Avoid non-free (google this term) software as much
as possible. Start becoming familiar with the tools you use. This isn’t
difficult, if you use linux on a daily basis, you are pretty much set.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Start small:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You’ll need to work with someone else’s code. Actually the organization you
will work for, will have code from tens to hundreds of developers. It is very
easy to be scared of looking at such a code. Which is why, you need to start
small. If you have computer courses, borrow codes from your friends or help
them with debugging. Get a bit comfortable with understanding someone else’s
code. Helping your friends out with their codes is probably one of the easiest
way to achieve that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Slowly increase your reach:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://github.com/explore&quot;&gt;Github Explore&lt;/a&gt; and look for projects that
seem interesting. You’ll often find things reported in the issues section that
seem easy enough to fix. Fix them! If you followed the first part, you should
already know how to contribute your changes (google - pull request)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Communicate:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I can’t stress this enough.&lt;/strong&gt; Ask for advice. If you are looking at an
interesting project with a bug you want to fix, but can’t seem to understand
how, ASK THE DEVS! In most cases, they’d know what to do but have been too busy
to actually fix it. In rare cases, it might be because it needs too much manual
labor (refactoring of code for example). Take the initiative and do the work.
Believe me, after your first accepted pull request, you’ll be much more
confident about the next one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But what does this have to do with GSoC?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Experience. This is the only form of preparation that counts. I’ve heard people
(many of whom have never been selected in GSoC) that a kickass proposal is all
that matters. This is NOT true. A kickass proposal can be a free entry to GSoC
but not having such a proposal doesn’t mean you have no chance, it means you’ll
have to improve the proposal before the deadline.&lt;/p&gt;

&lt;p&gt;Wait, what?&lt;/p&gt;

&lt;p&gt;What I mean to say, that if you are enthusiastic enough, the mentors of the
project would help you to ensure that you have a kickass proposal in the end,
and so it doesn’t matter if you don’t begin with an awesome one.&lt;/p&gt;

&lt;p&gt;Another thing that I’ve often heard thrown around is that you need to be
affiliated with the organization or be working with it beforehand to get
selected. This isn’t at all true either. I came in contact with my organization
only after the proposal time had started and here I am answering this question.&lt;/p&gt;

&lt;p&gt;Ok, I will do the above. Anything Else?&lt;/p&gt;

&lt;p&gt;Maybe. One another thing I would like to suggest is to keep a written record (I
mean a blog) of everything you do. Maybe you learnt something new in git, or
learnt to fix something in your operating system. This is advisable due to 2
reasons. It is very likely that you will run into a similar problem again, and
it is VERY handy to have your previously found solutions with you. Other, this
doesn’t only help retain your interest, it goes a long way to show others that
you are interested in something, and that includes the mentors you’d be
applying to.&lt;/p&gt;

&lt;p&gt;All the above seems like general advice, sort of like what you’d find in any
website. So I’ll end (in a few more paras) by telling what I did to achieve
this for the past year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My Backstory:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A little more than 1 year ago, I was in first year, with my endsems nearing
when I first heard about GSoC (I actually had no idea, it existed).&lt;/p&gt;

&lt;p&gt;My experience till then: Fairly good at coding (c, c++, python) but nothing to
show for it. One git repo of a group competition in robotics. That’s it.&lt;/p&gt;

&lt;p&gt;I applied for GSoC but I didn’t have any confidence in my work and I didn’t
make much contact with the mentors. The project required to do some programming
tasks which I did without breaking a sweat. After writing a long detailed and
well thought out proposal about the project, I submitted the draft. Then I
started waiting.&lt;/p&gt;

&lt;p&gt;Big Mistake. I pretended I was waiting for some sort of contact from the
mentors but the truth was, I am usually dead scared of conversation and I was
fooling myself by saying that I don’t want to bug the mentors. You have to bug
the mentors.&lt;/p&gt;

&lt;p&gt;Anyway, I wasn’t selected - big surprise :/&lt;/p&gt;

&lt;p&gt;I took a project under a professor, and started coding my summers anyway.&lt;/p&gt;

&lt;p&gt;This time however, I wanted to see what I could do so that I wouldn’t fail next
year. So I started exploring more and more github. Try it - even if you don’t
want to contribute. It is a pleasurable experience to surf through some
amazingly awesome code pieces. Note that some of the most starred repos contain
less than 100 lines of code. Surely you can gather the courage to try and
understand them?&lt;/p&gt;

&lt;p&gt;Around this time I had taken a huge interest in Operating Systems. I came
across a project LFS (linux from scratch) in which all packages are manually
compiled, starting from the compiler itself. Fascinating :P So I tried it. I
didn’t have open source or git or gsoc in mind. I did it because it was fun,
and I like learning something new. And compiling so many packages, I also
developed a respect for our dear package managers (apt-get, pacman, portage).
Anyway, when I saw a github project facebook/pathpicker, with a community
request for packaging scripts, I was intrigued. I had already done so much
compiling and played with package managers so much, it seemed easy to write
scripts to make a debian package. So I did. And the developers were pleased
with the work. Don’t get me wrong - the work was trivial - but the fact that
developers were nice enough to show their appreciation gave me a morale boost.&lt;/p&gt;

&lt;p&gt;Similarly, the text editor I use (neovim - fork of vim) was misbehaving a
little, so I went to its github repo and made a new issue. They never fixed it,
but I got to talk to some really awesome developers and got to know why
something like that would be really hard to fix. There were several small
incidents like this, and I can’t go into detail over every one.&lt;/p&gt;

&lt;p&gt;I also started a blog (&lt;a href=&quot;https://www.varstack.com&quot;&gt;https://www.varstack.com&lt;/a&gt;) where I started writing
posts whenever I found something really interesting, for example when I first
learnt to use SSH port forwarding (that one was recent, and mind blowing).&lt;/p&gt;

&lt;p&gt;So, when the judgment day arrived, that’s how I sold myself. My proposal was
detailed about the project, but it was nowhere near perfect. But I explained
very clearly who I was and what I liked. I told about my experience with
package managers and my fascination (the project I applied for is related to
package manager automation). I told truthfully that my daily driver OS is NixOS
and I would be installing Gentoo for the second time in my life (which would
mean that everything in the organization was completely new to me, and they
knew it). But I assured them that my experience with different OSs will only
help me with this task. I kept in contact with my mentors, asking for opinion
on every part of my proposal. I messaged other active people on IRC (internet
relay chat) asking for their opinions, and shamelessly gave my opinions on
their project page ideas. I did every task they gave me, and kept bugging my
mentors for more. Even though I had never used Gentoo before (properly), I was
able to complete the tasks they gave me in exceptionally small times, which was
due a conscious effort “What if a few minutes extra to the task gain me the
selection?”.&lt;/p&gt;

&lt;p&gt;This isn’t preparation for University exam, you don’t have to have that state
of mind for 2 years. It’s a single week of proposal submission in which you
might lose sleep. And now I can easily say it was worth it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 1:&lt;/strong&gt; Losing sleep also refers to the fact that I kept my phone on full
notification volume so that I was responsive to my mentor’s mails even if I had
to wake up in the middle of the night (different time zones :/). This was
probably overkill, and I’m not advising you do that. But showing some
enthusiasm will go a long way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 2:&lt;/strong&gt; The week of proposal submission is important, but the month that
follows before the result is also not to be neglected. The mentors will tell
you if they expect you to work during that time too, and I think it’s a good
sign if they do ;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 3:&lt;/strong&gt; I didn’t say anything about how to choose an organization, because
I really don’t know. Some people say that you should apply to organizations
that have the most slots (predicted from previous years), while some people say
to choose the ones least people will think to apply to. I personally chose one
I thought I would enjoy working with, since I already mentioned that I am
fascinated with operating systems and package managers (ever want to try
something cool? try nixos - one of the most amazing OS I have ever seen -
sorry, I couldn’t resist :P )&lt;/p&gt;

&lt;p&gt;Best of luck with your preparation (coding) and get to work (coding).
Remember, never hesitate to ask for help (my contact details can be found on
the &quot;About me&quot; page).&lt;/p&gt;

&lt;p&gt;Pallav Agarwal (&lt;a href=&quot;https://github.com/pallavagarwal07&quot;&gt;https://github.com/pallavagarwal07&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note 4:&lt;/strong&gt; This article was originally written as a Quora answer, and can still
be found on the website.&lt;/p&gt;</content><author><name></name></author><category term="post" /><summary type="html">Preface: I have been selected for Google Summer of Code ’16 under Gentoo Organization.</summary></entry></feed>